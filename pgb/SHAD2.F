      SUBROUTINE SHAD2(I,NTH,XC,YC,QS,QN,TARY,CSI,SNI,IRC,IFC,ISEQ,
     $NPB,NPE,NKP,IEC,
     $ISV,VRD,KCOR,NOUT7)
      INCLUDE 'COMA.FOR'
      DIMENSION AR2(MET),AR3P(MET)
      DIMENSION TARY(MTR,MTR)      
      DIMENSION AR4(MTN),AR5(MTN),AR6(MFV),AR7(MFV)
      DIMENSION PHMNV(MFV),PHUPV(MFV),VNGSV(MTHM),ERVSV(MTHM)
C
      DATA PIO2/1.5707963267948966192D0/
      DATA PI/3.141592653589793238463D0/
      DATA TWPI/6.2831853071795864769D0/
      DATA ANG/6.29D0/
	DATA ERLT/1.D-13/    
C     DETERMINE XY COODS.OF HORIZON POINTS FOR ECLIPSING STAR     
C     ECLIPSING STAR IS STAR I 
C     ARRAY RS IS ARRAY OF RADII TO HORIZON POINTS ON ECLIPSING STAR
C     ARRAY ALP IS ARRAY OF POLAR ANGLES,ON PLANE OF SKY,OF HORIZON
C     POINTS ON ECLIPSING STAR
C     ANGLE ALP WITH SECOND INDEX=2 REFERS TO BRANCH OF ECLIPSING 
C     STAR EXTENDING FROM UPPER POLE TO EQUATOR     
C     SECOND INDEX=1 REFERS TO BRANCH OF ECLIPSING STAR EXTENDING FROM   
C     EQUATOR TO LOWER POLE    
C     ARRAY ARYA BELONGS TO K=1 CASE  
C     ARRAY ARYB BELONGS TO K=2 CASE
      IF (I.EQ.IEC) ICOUNT=1
      IF (I.EQ.3-IEC) ICOUNT=2
      ER=EL
C     INITIALIZE AGL
      AGL=0.D0   
C     INITIALIZE VALUES OF SHS AND SHN
      DO 105 ITH=1,NTH  
      SHS(ITH,1)=ANG    
      SHN(ITH,1)=ANG    
      SHS(ITH,2)=ANG    
      SHN(ITH,2)=ANG    
      SHS(ITH,3)=ANG    
      SHN(ITH,3)=ANG    
  105 CONTINUE   
      DO 107 J=1,MTHM
      DO 106 K=1,3      
      XS(J,K)=ANG     
      YS(J,K)=ANG     
      XN(J,K)=ANG     
      YN(J,K)=ANG     
  106 CONTINUE   
  107 CONTINUE
      DO K=1,MTHM
      XHZB(K)=ANG
      YHZB(K)=ANG
      XHZE(K)=ANG
      YHZE(K)=ANG
      END DO
      DO K=1,MNKP
      XNK(K)=ANG      
      YNK(K)=ANG      
      END DO
      DO K=1,MTHM
      ERV(K)=ANG
      END DO
      DO ITH=1,MPHM
      PHXT(ITH)=0.D0
      END DO
      SHUP=10.D0
      PHUP=10.D0 
      SHDN=10.D0 
      PHDN=10.D0
C     Locate horizon points on eclipsing star
      CALL SHAD1A(3-I,NTH,
     $TARY,XBGEQ,YBGEQ,XNDEQ,YNDEQ,ISEQ,
     $NPB,NPE,NKP,XC,YC,KYA,KYB,ISV,IEC,IRD,ICOUNT,VRD,NOUT7)
C	OPEN (UNIT=30,FILE='SCRATCH.DAT',STATUS='REPLACE')
C	DO K=1,NPE
C		WRITE (30,1000) XHZE(K),YHZE(K)
C	END DO
C	DO K=1,NPB
C		WRITE (30,1000) XHZB(K),YHZB(K)
C	END DO
C	CLOSE (30, STATUS='KEEP')
C 1000 FORMAT (2F12.8)
C     XS,YS CONTAIN PLANE OF SKY COODS. OF HORIZON POINTS ON ECLIPSING
C     STAR
C     TARY IS PROJECTION MATRIX
C     Determine polar cood. values for horizon points and set array
C     of values representing continuous curve through horizon points.
      CALL HORZ(3-I,IRC,IFC,NPB,NPE,NKP,
     $I,XBGEQ,YBGEQ,
     $XNDEQ,YNDEQ,IEC,XC,YC,ISV,IRD,1,KCOR,NOUT7)
C
C     ARRAYS RS(1),ALP(1) REFER TO THE LARGE THETA BRANCH OF THE
C    COMPONENT IN QUESTION(FROM THE EQUATOR TO THE LOWER POLE)    
C     INDEX IFC GOES WITH THESE ARRAYS,AND POLYNOMIAL COEFFICIENTS ARYA  
C     ARRAYS RS(2),ALP(2) REFER TO THE SMALL THETA BRANCH OF THE
C     COMPONENT IN QUESTION(FROM THE UPPER POLE TO THE EQUATOR)   
C     INDEX IRC GOES WITH THESE ARRAYS,AND POLYNOMIAL COEFFICIENTS ARYB  
C     AT THIS POINT,ARYA,ARYB CONTAIN COEFFS. OF LEGENDRE  
C     POLYNOMIAL FITS TO TWO BRANCHES OF PROJECTED OUTLINE OF ECLIPSING  
C     STAR
C  
C  
C     NOW PREPARE TO LOCATE SHADOW BOUNDARIES ON ECLIPSED STAR    
C  
C
      DO 104 ITH=1,NTH
	THRY(ITH)=TH(I,ITH)  
  104 CONTINUE
C  
C*************************************************  
C     SET TO DESIGNATION OF ECLIPSED STAR    
C*************************************************  
C
C      I=3-I      
C      IF (DABS(Q-QS).LE.ERLT) GO TO 100   
C      Q=QS
C      GO TO 101  
C  100 Q=QN
C  101 PSI=PSI-PI 
C      IF (PSI.GT.TWPI) PSI=PSI-TWPI   
C      IF (PSI.LT.0.0) PSI=PSI+TWPI    
C      CM=TWPI-PSI
C      IF (CM.GE.TWPI) CM=CM-TWPI      
C      IF (CM.LT.0.0) CM=CM+TWPI
C      AG=0.D0
C      CALL LSGT(CSI,SNI,CM-AG,VL0,VM0,VN0,SPSI,CPSI,TARY)
C
C     **********PRINCIPAL LOOP**********
C
      DO 240 ITH=1,NTH
      VPHV=0.D0
C     INITIALIZE POINTERS FOR SHS AND SHN ARRAYS    
      ICS=1      
      ICN=1      
C     INITIALIZE POINTERS FOR VST AND VND ARRAYS    
      KB=1
      KN=1
      N=NPH(I,ITH)      
      VPHV=VST(I,ITH,1)  
      IF (N.EQ.1) GO TO 270    
      ERXT(ITH)=ERXT(ITH-1)
C
C     ***START OF SUBSIDIARY LOOP***
C
      DO 229 K=1,N  
      IF (K.EQ.1) GO TO 222  
      ERV(K)=ERV(K-1)  
      DFF=ERV(K-1)    
  222 CP1=VST(I,ITH,KN) 
      CP2=VND(I,ITH,KN) 
      IF (KN.EQ.1) GO TO 314
	IF (KN.EQ.3) THEN
		IF (DABS(CP1-ANG).LE.ERLT) THEN
			IF (DABS(CP2-ANG).LE.ERLT) GO TO 313
		END IF
      END IF
      IF (DABS(VST(I,ITH,KN-1)).LE.ERLT) THEN
		IF (DABS((VND(I,ITH,KN-1)-TWPI)).LT.ERLT) GO TO 313
	END IF
      GO TO 314
  313 CP1=0.D0
      CP2=TWPI
  314 ICSS=ICS   
      ICNS=ICN   
      PH1=VPHV    
      KRT=3      
	VPHV=PH(I,ITH,K)
      RT=VPHV     
      VNG(K)=VPHV
      IF (K.EQ.1) PH1=VPHV
      IF (K.EQ.1) GO TO 219
      IF (DABS(VST(I,ITH,1)-ANG).LE.ERLT) GO TO 229     
      IF (VPHV.LT.VST(I,ITH,1)) GO TO 229     
      IF ((VPHV.GT.VST(I,ITH,KB)).AND.(PH1.LE.VST(I,ITH,KB))) GO TO 234   
      IF (KB.GE.3) GO TO 219   
      IF ((VPHV.GT.VST(I,ITH,KB+1)).AND.(PH1.LE.VST(I,ITH,KB+1)))
     $GO TO 248
  219 IF ((VPHV.GE.VST(I,ITH,1)).AND.(VPHV.LE.VND(I,ITH,1))) GO TO 220     
      IF ((VPHV.GE.VST(I,ITH,2)).AND.(VPHV.LE.VND(I,ITH,2))) GO TO 220     
      IF ((VPHV.GE.VST(I,ITH,3)).AND.(VPHV.LE.VND(I,ITH,3))) GO TO 220     
      IF ((DABS(VPHV-VND(I,ITH,KN)).LE.ERLT).AND.
     $(PH1.LT.VND(I,ITH,KN))) GO TO 235   
      IF (KN.EQ.3) GO TO 227   
      IF ((DABS(VPHV-VND(I,ITH,KN+1)).LE.ERLT).AND.
     $(PH1.LT.VND(I,ITH,KN+1)))
     $GO TO 252
C     TEST WHETHER THE CURRENT VPHV AND THE PREVIOUS ONE BRIDGE THE
C     HORIZON,AT THE END OF A VISIBLE STRIP  
  227 IF ((VPHV.GT.VND(I,ITH,KN)).AND.(PH1.LE.VND(I,ITH,KN))) GO TO 235   
      GO TO 229  
C     IF WE ARRIVE HERE,THE MESH POINT IS ABOVE THE OBSERVERS HORIZON    
  220 CALL ERTS(I,ITH,VPHV,ER,TARY,
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JZ,IRD)
C     IF ERV(K) IS NEGATIVE,POINT X,Y,Z IS IN SHADOW 
      VNG(K)=VPHV  
      ERV(K)=VRHO-RDS
      IF (K.GT.1) GO TO 228  
      IF (ERV(K).GT.0.0) GO TO 229     
      IF (VPHV.LT.VST(I,ITH,KB))GO TO 229     
C     ARRIVE HERE FOR THE FIRST POINT ON A THETA PROFILE FOR WHICH THAT  
C     POINT IS IN SHADOW
      IF ((VPHV.GE.CP1).AND.(VPHV.LE.CP2)) THEN
		SHS(ITH,ICS)=VPHV
		ICS=ICS+1  
		KB=KB+1
	END IF
      IF ((ICS.GT.1).AND.(N.EQ.1)) GO TO 221 
      GO TO 229
  221 IF ((VPHV.GE.CP1).AND.(VPHV.LE.CP2)) THEN	  
		SHN(ITH,ICN)=VPHV
		ICN=ICN+1  
		KN=KN+1
	END IF    
      GO TO 229  
C     ARRIVE HERE IF BEYOND INITIAL POINT    
  228 IF (DABS(ERV(K)).LE.ERLT) GO TO 230     
C     IF EITHER OF THE TWO FOLLOWING STATEMENTS IS TRUE,WE HAVE
C     BRACKETED THE SHADOW EDGE
      KRT=3
      IF ((ERV(K-1).LT.0.D0).AND. (ERV(K).GT.0.D0)) GO TO 
     $231      
      IF ((ERV(K-1).GT.0.D0).AND.(ERV(K).LT.0.D0))GO TO 232 
C  
  241 IF ((K.EQ.N).AND.(ICS.NE.ICN)) GO TO 233
      GO TO 229  
  230 IF (ERV(K-1).LT.0.D0) THEN
		IF ((VPHV.GE.CP1).AND.(VPHV.LE.CP2)) THEN
			SHN(ITH,ICN)=VPHV
			ICN=ICN+1     
			KN=KN+1
		END IF
	END IF
      IF (ERV(K-1).GT.0.D0) THEN
		IF ((VPHV.GE.CP1).AND.(VPHV.LE.CP2)) THEN
			SHS(ITH,ICS)=VPHV
			ICS=ICS+1     
			KB=KB+1
		END IF
	END IF
      GO TO 229  
C********************************************************************
C     WE HAVE BRACKETED THE SHADOW EDGE AT THE END OF THE SHADOW RANGE   
  231 AR2(1)=PH1 
      AR2(3)=VPHV 
      AR2(2)=(PH1+VPHV)/2.D0   
      AR3P(1)=ERV(K-1) 
      AR3P(3)=ERV(K)      
      DO 236 KC=1,6     
      CALL ERTS(I,ITH,AR2(2),ER,TARY,   
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JJ,IRD)
      AR3P(2)=VRHO-RDS   
      CALL LAGIN(0.D0,RT,AR3P,AR2,2,3,KR,0.D0)  
      IF (KR.LT.3) CALL PMDSTOP
      IF ((RT.GT.AR2(1)).AND.(RT.LT.AR2(3))) GO TO 242     
      DO 250 LL=1,2     
      IF ((AR3P(LL).LT.0.D0).AND.(AR3P(LL+1).GT.0.D0)) GO TO 251      
  250 CONTINUE   
      CALL PMDSTOP      
  251 CALL LNTER(AR3P(LL),AR2(LL),AR3P(LL+1),AR2(LL+1),0.D0,RT)      
  242 CALL ERTS(I,ITH,RT,ER,TARY,
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JJ,IRD)

      DFF=VRHO-RDS
      IF (DABS(DFF).LT.0.0000001D0) GO TO 237   
      AR2(4)=AR2(3)+1.D0
      CALL SRTA(RT,DFF,AR2,AR3P,1,4)   
      DO 244 LL=1,3     
      IF ((AR3P(LL).LT.0.D0).AND.(AR3P(LL+1).GT.0.D0)) GO TO 245      
  244 CONTINUE   
      CALL PMDSTOP      
  245 AR2(1)=AR2(LL)    
      AR2(3)=AR2(LL+1)  
      AR2(2)=(AR2(1)+AR2(3))/2.D0
      AR3P(1)=AR3P(LL)    
      AR3P(3)=AR3P(LL+1)  
      IF (DABS(AR2(3)-AR2(1)).GT.0.00001D0) GO TO 236
      RT=AR2(2)
      GO TO 237
  236 CONTINUE   
  237 IF ((RT.LT.CP1).OR.(RT.GT.CP2)) GO TO 271
      SHN(ITH,ICN)=RT   
      ICN=ICN+1  
      KN=KN+1
  271 IF ((KRT.LT.1).OR.(KRT.GT.3)) CALL PMDSTOP    
      GO TO (239,269,241),KRT  
C**********************************************************************
C     WE HAVE BRACKETED THE SHADOW EDGE AT THE START OF THE SHADOW
C     RANGE
  232 AR2(1)=PH1 
      AR2(3)=VPHV 
      AR2(2)=(PH1+VPHV)/2.D0
      AR3P(1)=ERV(K-1) 
      AR3P(3)=ERV(K)      
      DO 406 KC=1,6     
      CALL ERTS(I,ITH,AR2(2),ER,TARY,   
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JJ,IRD)
      AR3P(2)=VRHO-RDS   
      CALL LAGIN(0.D0,RT,AR3P,AR2,2,3,KR,0.D0)  
      IF (KR.LT.3) CALL PMDSTOP
      IF ((RT.GT.AR2(1)).AND.(RT.LT.AR2(3))) GO TO 402     
      DO 255 LL=1,2     
      IF ((AR3P(LL).GT.0.D0).AND.(AR3P(LL+1).LT.0.D0)) GO TO 256      
  255 CONTINUE   
      CALL PMDSTOP      
  256 CALL LNTER(AR3P(LL),AR2(LL),AR3P(LL+1),AR2(LL+1),0.D0,RT)      
  402 CALL ERTS(I,ITH,RT,ER,TARY,
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JJ,IRD)
      DFF=VRHO-RDS
      IF (DABS(DFF).LT.0.00001D0) GO TO 407   
      DO 411 LL=1,2
      IF (ABS(AR2(LL+1)-AR2(LL)).LT.0.000001D0) GO TO 412
  411 CONTINUE
      GO TO 414
  412 DO 413 LL=1,2
      IF ((AR3P(LL).GT.0.D0).AND.(AR3P(LL+1).LT.0.D0)) GO TO 4120
  413 CONTINUE
      CALL PMDSTOP
 4120 CALL LNTER(AR3P(LL),AR2(LL),AR3P(LL+1),AR2(LL+1),0.D0,RT)
      GO TO 407
  414 AR2(4)=AR2(3)+1.D0
      CALL SRTA(RT,DFF,AR2,AR3P,1,4)
      DO 404 LL=1,3     
      IF ((AR3P(LL).GT.0.D0).AND.(AR3P(LL+1).LT.0.D0)) GO TO 405      
  404 CONTINUE   
      CALL PMDSTOP      
  405 AR2(1)=AR2(LL)    
      AR2(3)=AR2(LL+1)  
      AR2(2)=(AR2(1)+AR2(3))/2.D0
      AR3P(1)=AR3P(LL)    
      AR3P(3)=AR3P(LL+1)  
      IF (DABS(AR2(3)-AR2(1)).GT.0.00001D0) GO TO 406
      RT=AR2(2)
      GO TO 407
  406 CONTINUE   
  407 IF ((RT.LT.CP1).OR.(RT.GT.CP2)) GO TO 408
	SHS(ITH,ICS)=RT   
	ICS=ICS+1  
	KB=KB+1
  408 IF ((KRT.LT.1).OR.(KRT.GT.3)) CALL PMDSTOP    
      GO TO (239,269,241),KRT  
C********************************************************************
C     TEST THE LAST POINT ON THAT THETA PROFILE FOR POSSIBLE LOCATION    
C     WITHIN SHADOW     
  233 IF (ERV(K).LT.0.D0) THEN
		IF (DABS(VPHV-CP2).LT.1D-10) THEN
			SHN(ITH,ICN)=VPHV
			ICN=ICN+1
		END IF
	END IF     
      GO TO 229  
  248 PHV=VST(I,ITH,KB+1)      
      CP1=VST(I,ITH,KB+1)      
      CP2=VND(I,ITH,KN+1)      
      KB=KB+1    
      KN=KN+1
      GO TO 243  
C     VST HORIZON FALLS BETWEEN PH1 AND VPHV OR COINCIDES WITH PH1 
  234 PHV=VST(I,ITH,KB)
  243 IF ((PHV.LT.PH1).OR.(PHV.GT.VPHV)) GO TO 241   
      KRTSV=KRT  
      CALL ERTS(I,ITH,PHV,ER,TARY,
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JJ,IRD)
      ERV(K)=VRHO-RDS    
      VNG(K)=PHV
C     IF THE FOLLOWING STATEMENT IS TRUE,THE HORIZON POINT IS INSIDE     
C     THE SHADOW 
      IF (ERV(K).LT.0.D0) GO TO 218     
C     ALTHOUGH THE HORIZON MAY BE OUTSIDE THE SHADOW,A SHADOW EDGE MAY   
C     FALL BETWEEN THE HORIZON AND THE FIRST MESH POINT.   
C     TEST FOR THIS     
  238 PH1=PHV    
      ERV(K-1)=ERV(K)  
      VNG(K-1)=VNG(K)  
      CALL ERTS(I,ITH,VPHV,ER,TARY,      
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JJ,IRD)
      ERV(K)=VRHO-RDS    
      VNG(K)=VPHV  
      KRT=1
      IF ((ERV(K-1).GT.0.D0).AND.(ERV(K).LT.0.D0)) GO TO 232
      IF ((ERV(K-1).LT.0.D0).AND.(ERV(K).GT.0.D0)) GO TO 231
  239 IF (K.EQ.1) GO TO 246  
      IF (DABS(RT-VPHV).LE.ERLT) GO TO 246 
      PH1=RT     
      ERV(K-1)=DFF    
      VNG(K-1)=RT
  246 IF (VPHV.LT.VND(I,ITH,KN)) GO TO 241    
      IF ((ICNS.EQ.ICN).AND.(KRTSV.EQ.2)) GO TO 241 
      GO TO 235  
C     SET THE SHADOW EDGE TO THE HORIZON PHI VALUE 
  218 IF ((VPHV.GE.CP1).AND.(VPHV.LE.CP2)) THEN 
		SHS(ITH,ICS)=PHV  
		ICS=ICS+1  
		KB=KB+1
	END IF
      IF (KRT.EQ.3) GO TO 238  
      GO TO 246  
  252 PHV=VND(I,ITH,KN+1)      
      GO TO 253  
C     VND HORIZON FALLS BETWEEN PH1 AND VPHV  
  235 PHV=VND(I,ITH,KN)
  253 IF ((PHV.LT.PH1).OR.(PHV.GT.VPHV)) GO TO 241   
      KRTSV=KRT  
      IF (DABS(VND(I,ITH,KN)-ANG).LE.ERLT) GO TO 269    
      CALL ERTS(I,ITH,PHV,ER,TARY,   
     $IRC,IFC,NKP,XC,YC,AGL,RDS,VRHO,ISV,JJ,IRD)
      ERV(K)=VRHO-RDS    
      VNG(K)=PHV
C     IF THE FOLLOWING STATEMENT IS TRUE,THE HORIZON POINT IS OUTSIDE
C     THE SHADOW
      IF (ERV(K).GT.0.D0) GO TO 268
C     CHECK FOR GRAZING INCIDENCE ERROR
      IF (ICS.GT.ICN) GO TO 267
      GO TO 229     
  268 KRT=2
      IF ((ERV(K-1).GT.0.D0).AND.(ERV(K).LT.0.D0)) VPHV=PHV  
      IF ((ERV(K-1).GT.0.D0).AND.(ERV(K).LT.0.D0)) GO TO 232
      IF ((ERV(K-1).LT.0.D0).AND.(ERV(K).GT.0.D0)) VPHV=PHV  
      IF ((ERV(K-1).LT.0.D0).AND.(ERV(K).GT.0.D0)) GO TO 231
  269 IF (VPHV.LT.VST(I,ITH,KB)) GO TO 241
      IF ((ICSS.EQ.ICS).AND.(KRTSV.EQ.1)) GO TO 241 
      GO TO 234  
C     SET THE SHADOW EDGE TO THE HORIZON PHI VALUE 
  267 IF ((PHV.GE.CP1).AND.(PHV.LE.CP2)) THEN 
		SHN(ITH,ICN)=PHV
		ICN=ICN+1  
		KN=KN+1
	END IF    
      IF (K.EQ.N) GO TO 229
      IF (KRT.EQ.3) GO TO 268  
      GO TO 269  
  229 CONTINUE
C
C     ***END OF SUBSIDIARY LOOP***
C
      IF (ICS.NE.ICN) CALL PMDSTOP    
C     FILL ARRAY ERXT,PREPARATORY TO LOCATING UPPER AND LOWER SHADOW     
C     BOUNDARIES 
      KS2=1
      KN2=1
      KS1=2
      KN1=2
      IF (DABS(VST(I,ITH,1)-ANG).LE.ERLT) GO TO 240
      IF (DABS(VST(I,ITH,3)-ANG).LE.ERLT) GO TO 409
      RG1=VND(I,ITH,1)-VST(I,ITH,1)
      RG2=VND(I,ITH,2)-VST(I,ITH,2)
      RG3=VND(I,ITH,3)-VST(I,ITH,3)
      IF ((RG1.LT.RG2).AND.(RG1.LT.RG3)) GO TO 401
      IF ((RG2.LT.RG1).AND.(RG2.LT.RG3)) GO TO 403
C     ARRIVE HERE IF RG3 IS SMALLEST
      GO TO 409
C     ARRIVE HERE IF RG1 IS SMALLEST
  401 KS1=3
      KN1=3
      KS2=2
      KN2=2
      GO TO 409
C     ARRIVE HERE IF RG2 IS THE SMALLEST
  403 PHXT(ITH)=VNG(1)
      ERXT(ITH)=ERV(1)
      DO 416 K=1,N
      VPHV=VNG(K)
      IF ((VPHV.GE.VST(I,ITH,1)).AND.(VPHV.LE.VND(I,ITH,1))) GO TO 415
      IF ((VPHV.GE.VST(I,ITH,2)).AND.(VPHV.LE.VND(I,ITH,2))) GO TO 415
      IF ((VPHV.GE.VST(I,ITH,3)).AND.(VPHV.LE.VND(I,ITH,3))) GO TO 415
      GO TO 416
C     Place the most negative value of ERV, for that latitude circle,
C     in ERXT. Place corresponding value of VNG, the stellar longitude,
C     in PHXT.
  415 IF (ERV(K).GT.ERXT(ITH)) GO TO 416
      PHXT(ITH)=VNG(K)
      ERXT(ITH)=ERV(K)
  416 CONTINUE
      GO TO 240
  409 JCT=0
      DO 410 K=1,N
      VPHV=VNG(K)
      IF ((VPHV.GE.VST(I,ITH,KS2)).AND.(VPHV.LE.VND(I,ITH,KN2))) GO TO
     $420
      IF ((VPHV.GE.VST(I,ITH,KS1)).AND.(VPHV.LT.VND(I,ITH,KN1))) GO TO
     $420
      GO TO 410
  420 SB=0.0
      IF (VPHV.GE.VST(I,ITH,KN1)) SB=TWPI
      JCT=JCT+1
      ERA(JCT)=ERV(K)
      VNA(JCT)=VNG(K)-SB
  410 CONTINUE
C     Scan for duplicate entries
      JCTS=1
      DO 417 K=1,JCT-1
		IF (DABS(VNA(K)-VNA(K+1)).LT.ERLT) GO TO 417
		VNGSV(JCTS)=VNA(K)
		ERVSV(JCTS)=ERA(K)
		VNGSV(JCTS+1)=VNA(K+1)
		ERVSV(JCTS+1)=ERA(K+1)
		JCTS=JCTS+1
  417 CONTINUE
      DO K=1,JCTS
		ERA(K)=ERVSV(K)
		VNA(K)=VNGSV(K)
	END DO
	JCT=JCTS
      JN=JCT-1
C     SORT INTO ASCENDING VNA ORDER
      DO 425 K=1,JCT
      DO 424 J=1,JN
      IF (VNA(J+1).GE.VNA(J)) GO TO 424
      SB=VNA(J+1)
      VNA(J+1)=VNA(J)
      VNA(J)=SB
      SB=ERA(J+1)
      ERA(J+1)=ERA(J)
      ERA(J)=SB
  424 CONTINUE
  425 CONTINUE
C     Scan for minimum ERA(J)
      ERAMN=ERA(1)
      DO J=1,JCT
		IF (ERA(J).LT.ERAMN) ERAMN=ERA(J)
	END DO
C     If ERAMN is positive there is no eclipsed segment
      IF (ERAMN.GT.0.D0) GO TO 240
C     Now locate the minimum value of ERMN for each theta circle and
C     store in ERXT. Place the corresponding stellar longitude in PHXT.
  295 CALL SHDMN(I,ITH,JCT,ER,TARY,IRC,
     $IFC,NKP,XC,YC,ISV,ERA,VNA,PHXT(ITH),ERXT(ITH),IRD,
     $NOUT1)
      IF (PHXT(ITH).GT.VND(I,ITH,KN2)) PHXT(ITH)=VND(I,ITH,KN2)
      IF (PHXT(ITH).LT.(VST(I,ITH,KS1)-TWPI)) 
     $PHXT(ITH)=VST(I,ITH,KS1)-TWPI
      GO TO 240  
  270 IF (ITH.EQ.NTH) GO TO 285
      IF (ITH.NE.1) CALL PMDSTOP      
C     MUST CHOOSE BETWEEN THP AND TFP 
      AA=0.D0
      AB=CM      
      IF (THP(I).NE.0.0) AA=THP(I)    
      IF (TFP(I).NE.0.0) AA=TFP(I)    
      IF (DABS(AA-THP(I)).LE.ERLT) AB=PHP(I)     
      IF (DABS(AA-TFP(I)).LE.ERLT) AB=PFP(I)     
      SNTH=DSIN(AA)      
      CSTH=DCOS(AA)      
      SNPH=DSIN(AB)      
      CSPH=DCOS(AB)      
      ALMV=SNTH*CSPH    
      AMUV=SNTH*SNPH    
      CALL SHDTS(AA,AB,ALMV,AMUV,CSTH,I,TARY,  
     $IRC,IFC,NKP,XC,YC,RDS,AGL,ERXT(1),ISV,KCOR,IRD,NTH)
      PHXT(1)=AB 
      GO TO 240  
C     MUST CHOOSE BETWEEN THM AND TFM 
  285 AC=PI      
      AD=CM      
      IF (THM(I).NE.PI) AC=THM(I)     
      IF (TFM(I).NE.PI) AC=TFM(I)     
      IF (DABS(AC-THM(I)).LE.ERLT) AD=PHM(I)     
      IF (DABS(AC-TFM(I)).LE.ERLT) AD=PFM(I)     
      SNTH=DSIN(AC)      
      CSTH=DCOS(AC)      
      SNPH=DSIN(AD)      
      CSPH=DCOS(AD)      
      ALMV=SNTH*CSPH    
      AMUV=SNTH*SNPH    
      CALL SHDTS(AC,AD,ALMV,AMUV,CSTH,I,TARY,  
     $IRC,IFC,NKP,XC,YC,RDS,AGL,ERXT(NTH),ISV,KCOR,IRD,NTH)
      PHXT(NTH)=AD
  240 CONTINUE
c      IF (I.LT.1000) RETURN
C
C     **********END OF MAJOR LOOP
C
C     NOW LOCATE SHADOW BOUNDARIES AT HIGH AND LOW LATITUDES      
C     KTST IS A KEY THAT POINTS TO HIGH LATITUDES WHEN KTST=1 AND TO
C     LOW LATITUDES WHEN KTST=2
C     SHUP IS THE HIGH LATITUDE,LOW THETA SHADOW BOUNDARY  
C     PHUP IS THE CORRESPONDING LONGITUDE    
C     SHDN IS THE LOW LATITUDE,HIGH THETA SHADOW BOUNDARY  
C     PHDN IS THE CORRESPONDING LONGITUDE
C     SET THE THETA POINTER IST FOR THE SHADOW START
C     NOTE THAT WE CANNOT USE THE TEST SHS(ITH,1).NE.ANG BECAUSE
C     VST AND VND ARE EQ TO ANG FOR THETA CIRCLES BELOW THE HORIZON, 
C     AND SHS IS SET EQ TO ANG IF VST AND VND EQ ANG.
      DO 296 ITH=1,NTH
      IF (DABS(SHS(ITH,1)-ANG).LE.ERLT) THEN
		IF ((DABS(SHS(ITH,2)-ANG)).LE.ERLT) GO TO 296
	END IF
      GO TO 298
  296 CONTINUE
      GO TO 277
  298 DO 280 ITH=1,NTH-1
      VPHV=PH(I,ITH,1)
      IF (DABS(VPHV).LE.ERLT) GO TO 275
C     MUST HAVE SEPARATE TEST IN NECK REGION
      IF (DABS(SHS(ITH,1)-ANG).LE.ERLT) THEN
		IF ((DABS(SHS(ITH,2)-ANG)).LE.ERLT) GO TO 280
	END IF
  275 IF (ERXT(ITH).GE.0.D0) GO TO 280
C     TEST FOR CASE OF HIGH LATITUDES BELOW HORIZON
      IF ((DABS(VST(I,ITH,1)-ANG).LE.ERLT).AND.
     $(ERXT(ITH).LT.0.D0)) GO TO 281
      IF ((ERXT(ITH).LT.0.D0).AND.(SHS(ITH,1).NE.ANG)) GO TO 308
C     Test for shadow edge between current and next ITH
      IF ((ERXT(ITH).LT.0.D0).AND.(SHS(ITH+1,1).NE.ANG)) GO TO 281
  280 CONTINUE
C     IF ARRIVE HERE,THERE IS NO ECLIPSE
  277 SHUP=PIO2
      SHDN=PIO2
      PHUP=AB
      PHDN=AD
      GO TO 372
  308 IST=ITH-1
      GO TO 309
  281 IST=ITH
C     SET THE THETA POINTER IND FOR THE SHADOW END
  309 DO 282 ITH=1,NTH
  276 IF (ERXT(NTH-ITH+1).LT.0.D0) GO TO 283
  282 CONTINUE
      CALL PMDSTOP
  283 IND=NTH-ITH+1
C
C     FIND SHUP,THE SMALL THETA SHADOW LIMIT
C
  297 SHUP=0.D0
      PHUP=AB
      IRG=IND-IST+1
      IF (IRG.GT.1) GO TO 254
      SHUP=THRY(IST)
      GO TO 349
  254 CONTINUE
C     IF TOP OF STAR IS IN SHADOW,LOCATE SHDN
      IF (IST.EQ.1) GO TO 349
      IF ((ERXT(IST).LE.0.D0).AND.(SHS(IST,1).NE.ANG)) THEN
		IST=IST-1
		GO TO 284
	END IF
      IF ((ERXT(IST+1).LE.0.D0).AND.(SHS(IST+1,1).NE.ANG)) GO TO 284
      CALL LNTER(ERXT(IST),THRY(IST),ERXT(IST+1),THRY(IST+1),0.D0,SHUP)
      GO TO 350
C     Fill array AR6 with polar angle values between THRY(IST) and
C     THRY(IST+1)
C     ERXT changes sign between ERXT(IST) and ERXT(IST+1)
C     Note in the following that SRT SHDTS can calculate whether a
C     given point is in shadow whether or not that point is on a
C     labelled colatitude circle.
  284 AR6(1)=THRY(IST)
      AR6(5)=THRY(IST+1)
      DL=(AR6(5)-AR6(1))/4.D0
      DO 272 K=2,4
      AR6(K)=AR6(K-1)+DL
  272 CONTINUE
C     Fill AR7 array with values of the stellar longitude on a
C     given AR6 circle corresponding to the point deepest in shadow.
C     i.e., the point with the most negative value of ER or ERXT.
      DO 273 KTH=1,5
  301 SNTH=DSIN(AR6(KTH))
      CSTH=DCOS(AR6(KTH))
	IF ((DABS(SHS(IST+1,2)-ANG).LE.ERLT).AND.
     $(DABS(SHN(IST+1,2)-ANG).LE.ERLT)) THEN
		ST=SHS(IST+1,1)
		END=SHN(IST+1,1)
	ELSE
		ST=SHS(IST+1,2)-TWPI
		END=SHN(IST+1,1)
	END IF
C     Fill AR4 with equally spaced points that include the start
C     and end of the shadow for the particular colatitude in AR6
C     under current examination
      AR4(1)=ST
      AR4(10)=END
      DL=(AR4(10)-AR4(1))/9.D0
      DO 302 K=1,9
      AR4(K+1)=AR4(K)+DL
  302 CONTINUE
C     Fill AR5 with ER values corresponding to the entries in AR4
      DO 303 K=1,10
      SNPH=DSIN(AR4(K))
      CSPH=DCOS(AR4(K))
      ALMV=SNTH*CSPH
      AMUV=SNTH*SNPH
      CALL SHDTS(AR6(KTH),AR4(K),ALMV,AMUV,CSTH,I,TARY,
     $IRC,IFC,NKP,XC,YC,RDS,AGL,AR5(K),ISV,KCOR,IRD,NTH)
  303 CONTINUE
C     Now find the most negative entry in AR5
      KMN=1
      VMN=AR5(1)
      DO 304 K=2,10
      IF (AR5(K).GE.VMN) GO TO 304
      KMN=K
      VMN=AR5(K)
  304 CONTINUE
C     KMN points at the most negative entry in AR5
      AR7(KTH)=AR5(KMN)
	PHMN=AR4(KMN)
	PHMNV(KTH)=PHMN
      IF (AR7(KTH).GT.0.D0) GO TO 273
  273 CONTINUE
C     CHECK WHETHER INTERPOLATION IS POSSIBLE
      DO K=1,4
      IF ((AR7(K+1).LT.0.D0).AND.(AR7(K).GT.0.D0)) THEN
		CALL LNTER(AR7(K+1),AR6(K+1),AR7(K),AR6(K),0.D0,SHUP)
		GO TO 350
	END IF
	IF ((AR7(K+1).GT.0.D0).AND.(AR7(K).LT.0.D0)) THEN
		CALL LNTER(AR7(K+1),AR6(K+1),AR7(K),AR6(K),0.D0,SHUP)
		GO TO 350
	END IF
      END DO
  226 CONTINUE
      GO TO 349
  350 IF ((SHUP.GE.THRY(IST)).AND.(SHUP.LE.THRY(IST+1))) GO TO 349
      CALL PMDSTOP
C
C     Start of section for SHDN
C
  349 SHDN=PI
      PHDN=AD
      IF (IND.EQ.NTH) GO TO 372
C     CHECK IND
  291 IF ((IRG.GT.1).AND.(SHN(IND-1,1).NE.ANG)) GO TO 292
      IND=IND-1
      IRG=IRG-1
      IF (IRG.GT.1) GO TO 291
  292 IF (IRG.GT.1) GO TO 266
      SHDN=THRY(IND)
      GO TO 372
  266 IF ((ERXT(IND+1).NE.0.D0).AND.(SHN(IND,1).NE.ANG)) GO TO 286
      IF (SHN(IND,1).NE.ANG) IND=IND+1
      SHDN=THRY(IND)
      GO TO 371
  286 AR6(1)=THRY(IND)
      AR6(5)=THRY(IND+1)
      DL=(AR6(5)-AR6(1))/4.D0
      DO 351 K=2,4
      AR6(K)=AR6(K-1)+DL
  351 CONTINUE
      DO 274 KTH=1,5
      SNTH=DSIN(AR6(KTH))
      CSTH=DCOS(AR6(KTH))
	IF ((DABS(SHS(IND,2)-ANG).LE.ERLT).AND.
     $(DABS(SHN(IND,2)-ANG).LE.ERLT)) THEN
		ST=SHS(IND,1)
		END=SHN(IND,1)
	ELSE
		ST=SHS(IND,2)-TWPI
		END=SHN(IND,1)
	END IF
      AR4(1)=ST
      AR4(10)=END
      DL=(AR4(10)-AR4(1))/9.D0
      DO 352 K=1,9
      AR4(K+1)=AR4(K)+DL
  352 CONTINUE
      DO 353 K=1,10
      SNPH=DSIN(AR4(K))
      CSPH=DCOS(AR4(K))
      ALMV=SNTH*CSPH
      AMUV=SNTH*SNPH
      CALL SHDTS(AR6(KTH),AR4(K),ALMV,AMUV,CSTH,I,TARY,
     $IRC,IFC,NKP,XC,YC,RDS,AGL,AR5(K),ISV,KCOR,IRD,NTH)
  353 CONTINUE
      KMN=1
      VMN=AR5(1)
      DO 354 K=2,10
      IF (AR5(K).GE.VMN) GO TO 354
      KMN=K
      VMN=AR5(K)
  354 CONTINUE
      AR7(KTH)=AR5(KMN)
	PHMN=AR4(KMN)
	PHUPV(KTH)=PHMN
  274 CONTINUE
C     CHECK WHETHER INTERPOLATION IS POSSIBLE
      DO K=1,4
      IF ((AR7(K+1).GT.0.D0).AND.(AR7(K).LT.0.D0)) THEN
		CALL LNTER (AR7(K+1),AR6(K+1),AR7(K),AR6(K),0.D0,SHDN)
		GO TO 372
	END IF
	IF ((AR7(K+1).LT.0.D0).AND.(AR7(K).GT.0.D0)) THEN
		CALL LNTER (AR7(K+1),AR6(K+1),AR7(K),AR6(K),0.D0,SHDN)
          GO TO 372
      END IF
      END DO
  247 CONTINUE
      CALL LNTER (ERXT(IND),THRY(IND),ERXT(IND+1),THRY(IND+1),0.D0,SHDN)
      GO TO 372
  371 IF ((SHDN.GE.THRY(IND)).AND.(SHDN.LE.THRY(IND+1))) GO TO 372
      CALL PMDSTOP
C  372 I=3-I
C      IF (DABS(Q-QS).LE.ERLT) GO TO 102   
C      Q=QS
C      GO TO 103  
C  102 Q=QN
C  103 PSI=PSI+PI 
C      IF (PSI.GT.TWPI) PSI=PSI-TWPI   
C      CM=TWPI-PSI
C      IF (CM.GE.TWPI) CM=CM-TWPI      
C      IF (CM.LT.0.D0) CM=CM+TWPI
C      CALL LSGT(CSI,SNI,CM,VL0,VM0,VN0,SPSI,CPSI,TARY)
  372 CONTINUE
   99 RETURN     
      END 
