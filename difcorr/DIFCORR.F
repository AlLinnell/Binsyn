      PROGRAM DIFCORR
C     IWEMP=CONTROL FOR EXTERNAL WEIGHTS FOR INDIVIDUAL POINTS.   
C     IF IWEMP=0 INPUT WEIGHTS ARE SET =1.0. OTHERWISE INPUT WEIGHTS
C     ARE USED AS READ IN
C     KLMI=0 INPUT IN MAGNITUDES      
C     .NE.0 INPUT IN LIGHT RATIOS 
C     KTPI=0 INPUT IN PHASE UNITS     
C     KTPI.NE.0 INPUT IN TIME UNITS   
C     KPMORD=0 INPUT PH-DM     
C     KPMORD.NE.0 INPUT DM-PH  
C     IFMT= PROVIDES FORMAT OF DATA ON INPUT TAPE NDT 
C     N=NUMBER OF DATA POINTS IN A FILE ON INPUT TAPE.
C     CC=FACTOR TO INSURE MAGNITUDE DIFFERENCES RUN IN PROPER DIRECTION  
C     WTLEXP=WEIGHT FACTOR (EXPON.) IN REDUCING DIFFERENT LIGHT LEVELS
C     TO A COMMON STATISTICAL POPULATION  
C     PERIOD=PERIOD OF ORBIT IN DAYS  
C     IF INPUT IS IN PHASE UNITS,PERIOD=1.0  
C     TPM=TIME OF MIDPRIMARY MINIMUM,IN JULIAN DAYS,WITH FIRST TWO
C     DIGITS OMITTED    
C     IF INPUT IS IN PHASE UNITS,TPM=0.0     
C     DLS1,DLS2=START,IN PHASE UNITS,OF A PHASE INTERVAL TO OMIT FROM
C     THE SOLUTION   
C     DLN1,DLN2=END,IN PHASE UNITS,OF A PHASE INTERVAL TO OMIT FROM THE
C     SOLUTION
C     BDL=PARAMETER SUPPLIED TO THE SRT EDCS. ENTERS WEIGHT OF GIVEN     
C     POINT VIA EQUATION WL=((VL(I))/BDL)**(2.*WTLEXP)      
C     BL=PARAMETER SUPPLIED TO SRT EDCS.IF ABS(RSD).GE.BL,THAT POINT IS
C     EXCLUDED FROM THE SOLUTION.RSD IS A CURRENT RESIDUAL
C     AID=ORBITAL INCLINATION,IN DEGREES     
C     VI=ORBITAL INCLINATION IN RADIANS      
C     PT1=PHOTOSPHERIC POTENTIAL OF LARGER STAR,IN NORMALIZED
C     DIMENSIONLESS UNITS
C     PT2=PHOTOSPHERIC POTENTIAL OF SMALLER STAR IN NORMALIZED
C     DIMENSIONLESS UNITS
C     NORMALIZATION FACTOR IS   G(MASS 1 + MASS 2)/SEPARATION  
C     QS=MASS RATIO     
C     BA1=BOLOMETRIC ALBEDO OF LARGER STAR   
C     BA2=BOLOMETRIC ALBEDO OF SMALLER STAR  
C     GD1=GRAVITY DARKENING EXPONENT,LARGER STAR    
C     GD2=GRAVITY DARKENING EXPONENT,SMALLER STAR   
C     TP1=POLAR TEMP.,LARGER STAR,IN KILOKELVINS    
C     TP2=POLAR TEMP.,SMALLER STAR,IN KILOKELVINS   
C     US1=LIMB DARKENING SCALING COEFFICIENT,LARGER STAR   
C     US2=LIMB DARKENING SCALING COEFFICIENT,SMALLER STAR  
C     TZ1(1)=PHASE OR TIME OF MIDPRIMARY MIN.,CURRENT WAVELENGTH
C     VL31=THIRD LIGHT CONTRIBUTION,CURRENT WAVELENGTH     
C     KMN=0 FOR OCCULTATION AND TRANSIT DATA 
C     KMN=1 FOR OCCULTATION DATA ONLY 
C     KMN=2 FOR TRANSIT DATA ONLY     
C     IORDER GIVES THE ORDER OF PARAMETERS IN THE LEAST SQUARES
C     SOLUTION
C     ISTEP---USE ONLY EVERY ISTEP-TH DATA POINT FOR THIS SET OF
C     DATA VALUES
C     KY=0 FOR OCCULTATION AND 1 FOR TRANSIT,PRIMARY MINIMUM      
C     NOIT = ORDINAL NUMBER OF THE CURRENT ITERATION
C     INPUT DATA PHASE FROM ZERO TO ONE AND MAGNITUDE DIFFERENCE  
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION THLT(5),VH(13),LV(13),C(51)
      DIMENSION PSJ(300),SP(300),VCLC(300),VMX(5),RFMG(5),NIP(5)
      DIMENSION PHR(300),KEY(50),VCLCW(300,5)
      DIMENSION IORD(50),WL(5),VMNS(5),LAMDAO(5),LAMDAT(5),SC(50,50)
      DIMENSION TZ1A(5),TZ2A(5),VL31A(5)
      DIMENSION JWL(5),DPHS(5),TZS(5),VRY(300),UVL(5),RFMGA(5)
      DIMENSION NCT(5),VMNP(5),VLPSI(300)
      DIMENSION XRY01(11),XRY02(11),XRY03(11),XRY04(11),XRY05(11),
     $XRY06(11),XRY07(11),XRY08(11),XRY09(11),XRY10(11),XRY11(11),
     $XRY12(11)
      DIMENSION RSDV(100000,5),LULA(5),SUM(5)
	DIMENSION BF1(100000),BF2(100000),BF3(100000)
      COMMON/A/PI,TWOPI,HPI,CF,GVAL
      COMMON/B/PH,DM,VL,WEMP,IORD,VH,LV    
      COMMON/D/VI,ECC,OMD,POT1,POT2,QS,BA1,BA2,GD1,GD2,
     $TP1,TP2,US1,US2,TZ11,TZ21,TZ12,TZ22,TZ13,TZ23,TZ14,TZ24,TZ15,
     $TZ25,VL31,VL32,VL33,VL34,VL35,UVL,CNORM,AID,N,NSIT,NOIT,ISTEP
      COMMON /E/ PHR,VCLC,KEY
      COMMON /F/ XRY01,XRY02,XRY03,XRY04,XRY05,XRY06,XRY07,XRY08,XRY09,  
     $XRY10,XRY11,XRY12,
     $IVI,IVE,IOM,IPT1,IPT2,IVQ,IBA1,IBA2,IGD1,IGD2,ITP1,
     $ITP2,IUS1,IUS2,ITZ11,ITZ21,ITZ12,ITZ22,ITZ13,ITZ23,ITZ14,ITZ24,
     $ITZ15,ITZ25,IL31,IL32,IL33,IL34,IL35,IRF1,IRF2,IRF3,IRF4,IRF5
      COMMON /G/RSDV,LULA
      COMMON /NUNIT/ NU, NUOUT, IFOUT
      SAVE /A/   
      SAVE /B/   
      SAVE /D/   
      SAVE /E/   
      SAVE /F/
      SAVE /G/   
      REAL LAMDAO,LAMDAT
      CHARACTER * 80 FMT
      CHARACTER * 36 FL1
      CHARACTER * 7 LABEL
      CHARACTER * 1 BFR
      CHARACTER * 10 DATE,TIME,ZONE
      INTEGER * 2 IMON,IDAY,IHR,ISEC,IMIN,I100TH,IYR
      DIMENSION TIMEVALUES(8)
      INTEGER :: CLOCK1,CLOCK2,COUNT_RATE,COUNT_MAX,TIMEVALUES
      DIMENSION FL1(29)
      DATA GVAL/6.6704D-8/
      DATA CF/57.295779513082320876798D0/
      DATA TWPI/6.2831853071795864769D0/
      DATA PI/3.141592653589793238463D0/
      DATA PIO2/1.5707963267948966192D0/
      DATA CV/-1.08573620476D0/ 
      DATA ZR1/0.D0/
	DATA PHRF1,PHRF2/-0.3D0,0.7D0/
      DATA KIN/1/
      DATA IN1,IN2,IN3,IN4,IN5,IN6,IN7/2,3,4,55,66,7,8/
      DATA IN8,IN9,IN10,IN11,IN12,IN13/9,10,11,12,13,14/
      DATA IN14,IN15,IN16,NSC1,NSC2/15,16,17,18,19/
      DATA NSC3,NSC4,NSC5,IN17,NOUT1,NOUT2/20,21,22,23,24,25/
      DATA NOUT4,NOUT5,NOUT6,NHIST/26,27,28,29/
      DATA KEYBAD/-1/
      DATA KEYGOOD/0/
      TWOPI=TWPI 
   11 FORMAT(1H1)
  100 FORMAT (A36)
  103 FORMAT (I2)
  202 FORMAT (1A1)
  104 FORMAT (1X,'PROGRAM DIFCORR',20X,'DATE=',I2,'/',I2,'/',I4,2X,
     $'TIME=',I2,':',I2,':',I2,'.',I2)
  106 FORMAT (10I5)
  107 FORMAT (1X,'NUMBER OF WAVELENGTHS OF OBSERVATION=',I10,/,1X,
     $'NUMBER OF VALUES OF ORBITAL LONGITUDE=',I10,',REFERENCE CURVE')
  108 FORMAT (3E20.12)  
  110 FORMAT (8D15.8)
  111 FORMAT (8F10.5)
  112 FORMAT (6F20.13)
  113 FORMAT (1X,'VALUES OF THIRD LIGHT,BY ORDINAL WAVELENGTH VALUES=',
     $/,10E12.4)
  117 FORMAT (1X,'WAVELENGTHS OF OBSERVATION=',/,10F8.4)
  126 FORMAT (5D22.13)
  204 FORMAT (7F18.13)
  205 FORMAT (1X,'Program running time=',F14.4,2X,'seconds')
      CALL SYSTEM_CLOCK(CLOCK1)
      CALL DATE_AND_TIME(DATE,TIME,ZONE,TIMEVALUES)
      IYR=TIMEVALUES(1)
      IMON=TIMEVALUES(2)
      IDAY=TIMEVALUES(3)
      IHR=TIMEVALUES(5)
      IMIN=TIMEVALUES(6)
      ISEC=TIMEVALUES(7)
      HPI=PIO2
      NTI=1      
      NSIT=0
      DO 14 K=1,5      
      WL(K)=0.0D0
      JWL(K)=K   
   14 CONTINUE   
      DO 38 K=1,50
      KEY(K)=0   
   38 CONTINUE   
      DO 6 K=1,300
      VCLC(K)=0.0D0
    6 CONTINUE   
      DO 114 K=1,5
      THLT(K)=0.0D0
      TZ1A(K)=0.0D0
      TZ2A(K)=0.0D0
      VL31A(K)=0.0D0
  114 CONTINUE   
C*****************************************************************
C 
      OPEN (UNIT=30,    FILE='DIFCORR.ILS',
     $STATUS='OLD')
      READ (30,100 )    (FL1(J),J=1,29)
      OPEN (UNIT=KIN,   FILE=FL1(1),  STATUS='OLD')
      WRITE (KIN, 103)  KEYBAD
      REWIND KIN
      OPEN (UNIT=IN1,   FILE=FL1(2),  STATUS='OLD')
      OPEN (UNIT=IN2,   FILE=FL1(3),  STATUS='OLD')
      OPEN (UNIT=IN3,   FILE=FL1(4),  STATUS='OLD')
      OPEN (UNIT=IN4,   FILE=FL1(5),  STATUS='OLD')
      OPEN (UNIT=IN5,   FILE=FL1(6),  STATUS='OLD')
      OPEN (UNIT=IN6,   FILE=FL1(7),  STATUS='OLD')
      OPEN (UNIT=IN7,   FILE=FL1(8),  STATUS='OLD')
      OPEN (UNIT=IN8,   FILE=FL1(9),  STATUS='OLD')
      OPEN (UNIT=IN9,   FILE=FL1(10), STATUS='OLD')
      OPEN (UNIT=IN10,  FILE=FL1(11), STATUS='OLD')
      OPEN (UNIT=IN11,  FILE=FL1(12), STATUS='OLD')
      OPEN (UNIT=IN12,  FILE=FL1(13), STATUS='OLD')
      OPEN (UNIT=IN13,  FILE=FL1(14), STATUS='OLD')
      OPEN (UNIT=IN14,  FILE=FL1(15), STATUS='OLD')
      OPEN (UNIT=IN15,  FILE=FL1(16), STATUS='OLD')
      OPEN (UNIT=IN16,  FILE=FL1(17), STATUS='OLD')
      OPEN (UNIT=NSC1,  FILE=FL1(18), FORM='UNFORMATTED', 
     $STATUS='REPLACE')
      OPEN (UNIT=NSC2,  FILE=FL1(19), STATUS='REPLACE')
      OPEN (UNIT=NSC3,  FILE=FL1(20), STATUS='REPLACE')
      OPEN (UNIT=NSC4,  FILE=FL1(21), STATUS='REPLACE')
      OPEN (UNIT=NSC5,  FILE=FL1(22), STATUS='REPLACE')
      OPEN (UNIT=IN17,  FILE=FL1(23), STATUS='OLD')
      OPEN (UNIT=NOUT1, FILE=FL1(24), STATUS='REPLACE')
      OPEN (UNIT=NOUT2, FILE=FL1(25), STATUS='REPLACE')
      OPEN (UNIT=NOUT4, FILE=FL1(26), STATUS='REPLACE')
      OPEN (UNIT=NOUT5, FILE=FL1(27), STATUS='REPLACE')
      OPEN (UNIT=NOUT6, FILE=FL1(28), STATUS='REPLACE')
      OPEN (UNIT=NHIST, FILE=FL1(29), STATUS='REPLACE')
C*****************************************************************
C     Input control data
      LBLERR=0
      LABEL = 'DIFCORR'
      NU=IN1
      CALL GTLBL ( LABEL, LBLERR)
      IF (LBLERR.EQ.(-1)) CALL PMDSTOP
      WRITE (NOUT1,104) IMON,IDAY,IYR,IHR,IMIN,ISEC,I100TH
      CALL IREAD ( KLMI)   !form of input, light or magnitudes
      CALL DUMMY (2)
      CALL IREAD ( KPMORD) !sequence of input data, PH-DM or DM-PH
      CALL DUMMY (2)
      CALL IDREAD ( LMPT)   !limit on number of input records processed
      LMPTSV=LMPT
      CALL DUMMY (1)
      CALL IREAD ( KY)     !type of primary minimum, occ or transit
      CALL DUMMY (2)
      CALL IREAD ( KCT)    !number of input numbers per record, 2 or 3
      CALL DUMMY (2)
      CALL IREAD ( KPD)    !control to print difference table
      CALL DUMMY (2)
      CALL IREAD ( KMN)    !control on what data to use in solution
      CALL DUMMY (3)
      CALL IREAD ( KFP)    !control for listing input data lines
      CALL DUMMY (2)
      CALL IREAD ( MXPM)   !max. number of parameters in solution
      CALL DUMMY (1)
      CALL IREAD ( ISTEP)  !use every ISTEP'th data point
      CALL DUMMY (1)
      CALL IREAD ( NPTMX)  !limit on number of data points listed
      CALL DUMMY (2)
      CALL IREAD ( IWEMP)  !control for calculation of weights
      CALL DUMMY (3)
      CALL DREAD ( CC, 'F7.3')
      CALL DUMMY (1)
      CALL DREAD ( WTLEXP, 'F7.3') !exponent of light value, weights
      CALL DUMMY (1)
      CALL DREAD ( BL, 'F7.3') !control for listing deviant points
      CALL DUMMY (3)
      CALL DREAD ( BDL, 'F7.3')!normalization parameter, weights
      CALL DUMMY (2)
      CALL DREAD ( PERIOD, 'F15.12') !orbital period
      CALL DUMMY (1)
      CALL DREAD ( TPM, 'F12.5') !H.J.D. of pri. min.
      CALL DUMMY (1)
      CALL DREAD ( FRA, 'F7.3')  !fraction of calc. corr. to apply
      CALL DUMMY(1)
      CALL DREAD ( DLS1, 'F7.3')  !start. phase of phase range to ignore
      CALL DUMMY (1)
      CALL DREAD ( DLN1, 'F7.3')  !end. phase of phase range to ignore
      CALL DUMMY (1)
      CALL DREAD ( DLS2, 'F7.3')  !start. phase of phase range to ignore
      CALL DUMMY (1)
      CALL DREAD ( DLN2, 'F7.3')  !end. phase of phase range to ignore
      CALL DUMMY (1)
C
      NDT=IN3
      READ (IN2,106) KCTRL,NPSI
      READ (IN7,106) I,NT,NWL
      IF (NWL.GT.5) CALL PMDSTOP
      READ (IN7,126) CA,CB,CO,CD,CE,CP,CG,CH,CI,CJ,CK,CL,CM,CN
      READ (IN7,126) (WL(K),K=1,NWL)
C     Read format for data on input photometric tape
      CALL CREAD ( FMT)
      CALL DUMMY (2)
C     Read control integers for deciding which parameters to optimize
      DO K=1,MXPM
      CALL IREAD ( IORD(K))
      END DO
C     Read orbital eccentricity and longitude of periastron
      NU=IN17
      CALL DUMMY (15)
      CALL DREAD( ECC, 'F8.3')
      CALL DUMMY (1)
      CALL DREAD( OMD, 'F8.3')
C     Read third light
      READ (IN11,106) KWL
      IF (KWL.NE.NWL) CALL PMDSTOP
      READ (IN11,111) (THLT(K),K=1,NWL)
C     Read time or phase of midprimary minimum
      READ (IN12,106) KWL
      IF (KWL.NE.NWL) CALL PMDSTOP
      READ (IN12,111) (DPHS(K),K=1,NWL)
      TZ11=DPHS(1)
      TZ12=DPHS(2)
      TZ13=DPHS(3)
      TZ14=DPHS(4)
      TZ15=DPHS(5)
C     Read time or phase of midsecondary minimum
      READ (IN13,106) KWL
      IF (KWL.NE.NWL) CALL PMDSTOP
      READ (IN13,111) (TZS(K),K=1,NWL)
      TZ21=TZS(1)
      TZ22=TZS(2)
      TZ23=TZS(3)
      TZ24=TZS(4)
      TZ25=TZS(5)
C     Read reference magnitudes for normalizing light curves to unit
C     light value at light maximum
      READ (IN14,106) KWL
      IF (KWL.NE.NWL) CALL PMDSTOP
      READ (IN14,111) (RFMG(K),K=1,NWL)
C     Initialize light amplitude scaling factor. (Used to calculate
C     increments to light curve reference magnitudes.)
      DO K=1,NWL
      UVL(K)=1.D0
      END DO
C     Read ordinal locations, in reference light curves, of critical
C     phases.
      READ (IN10,106) NPSI,N1,N2,N3,N4,N5,N6
      READ (IN10,204)(VLPSI(K),K=1,NPSI)
C     Read number of points, in reference light curves, in critical
C     phase ranges.
      READ (IN10,106) NRY1,NRY2,NRY3,NRY4,NRY5,NRY6,NRY7,NRY8,NRY9,
     $NRY10,NRY11,NRY12
      READ (IN10,106) (LV(K),K=1,13)
C     Read current iteration number.
      READ (IN15,106) NOIT
      REWIND IN15
C  
C     KY INDICATES TYPE OF ECLIPSE FOR PRIMARY MINIMUM     
C     IF KY=0,PRI.MIN.IS AN OCCULTATION      
C     IF KY.NE.0,PRI.MIN.IS A TRANSIT 
C     KCT INDICATES WHETHER THE INPUT DATA HAVE TWO FIELDS OR THREE
C     PER RECORD
C     IF KCT=0,THE INPUT DATA HAVE TWO FIELDS PER RECORD   
C     NOIT IS THE NUMBER OF THIS ITERATION   
C     KPD IS A CONTROL TO PRINT DIFFERENCE TABLES   
C  
C  
   30 IF(ISTEP.LE.0) ISTEP=1   
C  
   31 FORMAT (F4.0,F9.5)
C     USE BL TO LIST POINTS MORE THAN BL STD.DEVIATIONS FROM MEAN
C  
C  
      IF(BDL.EQ.0.D0) BDL=1.D0     
   33 FORMAT(7F18.13)   
   20 FORMAT (6F12.7)
C  
C  
C     Read initial data header record
C
      READ (NDT,202,END=299,ERR=299) BFR
C
      DO 115 K=1,NWL    
      JWL(K)=K   
  115 CONTINUE   
C     READ ESTIMATES OF PARAMETERS    
   37 FORMAT (5E20.12)   
      READ (IN5,37) POT1,POT2,QS,VMI,RI
      READ (IN6,33) VI,PHSEC
C     AID=ORBITAL INCLINATION IN DEGREES. VI IS IN RADIANS.      
      AID=CF*VI  
      READ (IN8,20) BA1,BA2,GD1,GD2,TP1,TP2,US1,US2  
      CNORM=GVAL*VMI*(1.0D0+QS)/RI
C  
C  
C  
   56 FORMAT (5F16.10)  
   57 FORMAT (25(1X,I2))
C  
C  
   77 FORMAT (5E16.5)   
      REWIND NSC1
      REWIND NSC2
      REWIND NSC3
      REWIND NSC4
      REWIND NSC5
    2 FORMAT(16I5)      
   97 FORMAT (A) 
C     INPUT PHOTOMETRIC DATA VIA TAPE NDT
C     May have different numbers of observations for different
C     wavelengths
   16 BFRG3=1.0  
      DO 69 IWL=1,NWL
      NCT(IWL)=0
      IF (KPMORD.EQ.0) GO TO 22
C     Data are in sequence DM-PH      
      DO 21 I=1,100000
      IF (KCT.EQ.0) GO TO 200
C     Read DM,PH,weight        
      READ (NDT, FMT,ERR=299,END=68) BFRG2,BFRG1,BFRG3     
      GO TO 201
C     Read DM,PH        
  200 READ (NDT, FMT,ERR=299,END=68) BFRG2,BFRG1,BFRG3
C     Test for termination record for this color      
  201 IF ((BFRG2.EQ.0.0D0).AND.(BFRG1.EQ.0.0D0))GO TO 70
      WRITE (NSC3, 108) BFRG1,BFRG2,BFRG3    
   21 CONTINUE   
   68 CALL PMDSTOP
C     Record number of observations in this color   
   70 NCT(IWL)=I-1
      GO TO 69
C     Data are in sequence PH-DM        
   22 DO 23 I=1,100000
      IF (KCT.EQ.0) GO TO 198
C     Read PH,DM,weight        
      READ (NDT, FMT,ERR=299,END=68) BFRG1,BFRG2,BFRG3     
      GO TO 199
C     Read PH,DM        
  198 READ (NDT, FMT,ERR=299,END=68) BFRG1,BFRG2,BFRG3
C     Test for termination record for this color      
  199 IF ((BFRG2.EQ.0.D0).AND.(BFRG1.EQ.0.D0)) GO TO 70
      WRITE (NSC3,108) BFRG1,BFRG2,BFRG3     
   23 CONTINUE   
      CALL PMDSTOP
C     End of input loop for each color      
   69 CONTINUE
C     Make sure no consecutive observations are identical
      REWIND NSC3
	REWIND NSC4 
	DO IWL=1,NWL
		N=NCT(IWL)
		DO J=1,N
			READ (NSC3,108) BF1(J),BF2(J),BF3(J)
		END DO
		DO J=1,N-1
			IF ((DABS(BF1(J+1)-BF1(J)).LT.1.D-10).AND.(DABS(BF2(J+1)-
     $			BF2(J)).LT.1.D-10)) THEN
				BF1(J)=BF1(J)-1.D-10
			END IF
		END DO
		DO J=1,N
			WRITE (NSC4,108) BF1(J),BF2(J),BF3(J)
		END DO
	END DO
	ENDFILE NSC4
	REWIND NSC4
C    
      REWIND NSC3
	DO IWL=1,NWL
	N=NCT(IWL)
	DO J=1,N
		READ (NSC4,108) BF1(J),BF2(J),BF3(J)
	END DO
	DO J=1,N
		WRITE (NSC3,108) BF1(J),BF2(J),BF3(J)
	END DO
      END DO
	REWIND NSC4
C
C   
  210 WRITE (NOUT1,107) NWL,NPSI
      WRITE (NOUT1,117) (WL(K),K=1,NWL)
      WRITE (NOUT1,113) (THLT(K),K=1,NWL)
   99 FORMAT (1H ,A)    
    5 FORMAT(F9.6,F9.6,9X,F9.6)
    9 ENDFILE NSC3      
   10 REWIND NSC3
      WRITE (NOUT1,43) 
      WRITE (NOUT1,55) (IORD(I),I=1,MXPM)
C     Note that the parameters on the left side of the = signs
C     are in the ordinal sequence in which they appear in the
C     listing in DIFCORR.INF. The first parameter on this list
C     that is actually to be included in the solution must have
C     a designation "1" on the right side of the = sign. The
C     next parameter to be included must have a designation "2",
C     and so on. There must be at least two parameters selected 
C     for a given solution.     
   43 FORMAT(' ORDER OF PARAMETERS IN LEAST SQUARES SOLUTION',/,
     $'(IF EQUAL TO ZERO, PARAMETER IS NOT INCLUDED IN SOLUTION)',/)
   55 FORMAT(
     $' IVI =',I2,/,
     $' IVE =',I2,/,
     $' IOM =',I2,/,
     $' IPT1=',I2,/,
     $' IPT2=',I2,/,
     $' IVQ =',I2,/,
     $' IBA1=',I2,/,
     $' IBA2=',I2,/,
     $' IGD1=',I2,/,
     $' IGD2=',I2,/,
     $' ITP1=',I2,/,
     $' ITP2=',I2,/,
     $' IUS1=',I2,/,
     $' IUS2=',I2,/,
     $' ITZ11=',I2,/,
     $' ITZ21=',I2,/,
     $' ITZ12=',I2,/,
     $' ITZ22=',I2,/,
     $' ITZ13=',I2,/,
     $' ITZ23=',I2,/,
     $' ITZ14=',I2,/,
     $' ITZ24=',I2,/,
     $' ITZ15=',I2,/,
     $' ITZ25=',I2,/,
     $' IL31=',I2,/,
     $' IL32=',I2,/,
     $' IL33=',I2,/,
     $' IL34=',I2,/,
     $' IL35=',I2,/,
     $' IRF1=',I2,/,
     $' IRF2=',I2,/,
     $' IRF3=',I2,/,
     $' IRF4=',I2,/,
     $' IRF5=',I2)
C     INSURE CORRECT ORDER. NO TWO PARAMETERS MAY HAVE THE
C     SAME DESIGNATION DIFFERENT FROM 0.    
      DO 53 I=1,49
      J1=I+1     
      DO 49 J=J1,50
      IF((IORD(I).EQ.IORD(J)).AND.(IORD(I).NE.0)) GO TO 95  
   49 CONTINUE   
   53 CONTINUE
C     IRANK designates the order of the solution, i.e., the number of
C     parameters for which a solution is to be found.      
      IRANK=0    
      DO 52 I=1,50
      IF((IORD(I).LT.0).OR.(IORD(I).GT.51)) GO TO 95
      IF(IORD(I).EQ.0) GO TO 51     
      IRANK=IRANK+1     
      GO TO 52   
   51 IORD(I)=51
   52 CONTINUE   
      IF(IRANK.GT.50) IRANK=50
C  
C
C     KEY(KK)=1 for each parameter included in the solution.  
   76 DO 8 KK=1,50
      IF ((IORD(KK).NE.0).AND.(IORD(KK).NE.51)) KEY(KK)=1
    8 CONTINUE   

      KERR=0     
  121 FORMAT (1X,'REQUEST IORDER=',I5,2X,'WHILE CORRESPONDING KEY=',I5)  
      DO 54 I=1,50
      IF (IORD(I).EQ.51) GO TO 54
      IF (KEY(I).EQ.1) GO TO 54
      WRITE (NOUT1,121) IORD(I),KEY(I)
      KERR=1     
   54 CONTINUE   
      IF (KERR.EQ.1) GO TO 102 
C  
C  
C     JL=TOTAL NUMBER OF ENTRIES IN CALCULATED LIGHT CURVE,FOR EACH
C     WAVELENGTH
C     LV(1) IDENTIFIES THE ORDINAL POINT CORRESPONDING TO PRIMARY MIN.   
C     LV(2) IDENTIFIES THE ORDINAL POINT CORRESPONDING TO INTERNAL
C     TANGENCY FOLLOWING MIDPRIMARY   
C     LV(3) IDENTIFIES THE ORDINAL POINT CORRESPONDING TO EXTERNAL
C     TANGENCY FOLLOWING PRI.MIN.
C     LV(4) IDENTIFIES THE ORDINAL POINT CORRESPONDING TO MAX.LIGHT,     
C     NEAR THE QUADRATURE PHASE FOLLOWING MIDPRIMARY
C     LV(5) IDENTIFIES THE ORDINAL POINT CORRESPONDING TO EXTERNAL
C     CONTACT BEFORE MIDSECONDARY
C     LV(6) IDENTIFIES THE ORDINAL POINT CORRESPONDING TO INTERNAL
C     CONTACT BEFORE MIDSECONDARY
C     LV(7) IDENTIFIES THE ORDINAL POINT CORRESPONDING TO MIDSECONDARY   
C     LV(8)-LV(13) IDENTIFY COMPARABLE POINTS IN SEQUENCE,WITH LV(13)    
C     IDENTIFYING MIDPRIMARY   
C  
C  
C     READ IN CALCULATED CURRENT APPROXIMATION LIGHT CURVE FOR
C     ALL WAVELENGTHS
C
      NTL=NPSI
      DO 135 IWL=1,NWL 
      VMX(IWL)=0.D0
      DO 40 IC=1,NPSI   
C     RDWT7 INPUTS VIA IN4  
C     THESE ARE THE DATA WRITTEN VIA WTOUT5 IN PGD  
C     DETERMINE VALUE OF MAXIMUM LIGHT,STORE IN VMX(IWL)
      CALL RDWT7(I,IL,VI,PSJ(IC),SP(IC),SMC,ERC,SMD,ERD,SME,ERE,SMF,
     $ERF,SMT,SBT,ERT,VCLC(IC),ERR,PSINT,PSEXT,SURF1,SURF2,KCTRL,IN4)
      IF (VCLC(IC).GT.VMX(IWL)) VMX(IWL)=VCLC(IC)
   40 CONTINUE   
C
C     NORMALIZE CALCULATED LIGHT TO MAXIMUM LIGHT
C
      DO 24 IC=1,NPSI
      VCLC(IC)=VCLC(IC)/VMX(IWL)
   24 CONTINUE
      DO 370 K=1,NPSI   
      VRY(K)=VCLC(K)
  370 CONTINUE
      IF (DABS(TWPI-PSJ(NPSI)).LT.0.1D0) THEN
          NTL=NPSI
      END IF
      DO 371 K=1,NTL    
C     RESET COMPLETED LIGHT CURVE IN STORAGE
      VCLCW(K,IWL)=VRY(K)
  371 CONTINUE   
  135 CONTINUE
C
C     Set critical phase points for light curve  
      VH(1)=PSJ(LV(1))
      VH(2)=PSJ(LV(2))
      VH(3)=PSJ(LV(3))
      VH(4)=PSJ(LV(4))
      VH(5)=PSJ(LV(5))
      VH(6)=PSJ(LV(6))
      VH(7)=PSJ(LV(7))
      VH(8)=PSJ(LV(8))
      VH(9)=PSJ(LV(9))
      VH(10)=PSJ(LV(10))
      VH(11)=PSJ(LV(11))
      VH(12)=PSJ(LV(12))
      VH(13)=PSJ(LV(13))
C     Set number of fiducial points in critical phase ranges
C
      ND1=NRY1
      IF (ND1.EQ.0) ND1=1
      ND2=NRY2
      IF (NRY3.GT.0) THEN
         ND3=NRY3
      ELSE
         ND3=1
      END IF
      IF (NRY4.GT.0) THEN
         ND4=NRY4
      ELSE
         ND4=1
      END IF
      ND5=NRY5
      IF (NRY6.GT.0) THEN
         ND6=NRY6
      ELSE
         ND6=1
      END IF
      IF (NRY7.GT.0) THEN
         ND7=NRY7
      ELSE
         ND7=1
      END IF
      ND8=NRY8
      IF (NRY9.GT.0) THEN
         ND9=NRY9
      ELSE
         ND9=1
      END IF
      IF (NRY10.GT.0) THEN
         ND10=NRY10
      ELSE
         ND10=1
      END IF
      ND11=NRY11
      IF (NRY12.GT.0) THEN
         ND12=NRY12
      ELSE
         ND12=1
      END IF
c     Set fiducial phase values in critical phase ranges
      DO 82 K=1,ND1
      XRY01(K)=PSJ(K+LV(1)-1)  
   82 CONTINUE
      DO 83 K=1,ND2
      XRY02(K)=PSJ(K+LV(2)-1)  
   83 CONTINUE
      DO 84 K=1,ND3
      XRY03(K)=PSJ(K+LV(3)-1)  
   84 CONTINUE
      DO 86 K=1,ND4
      XRY04(K)=PSJ(K+LV(4)-1)  
   86 CONTINUE
      DO 87 K=1,ND5
      XRY05(K)=PSJ(K+LV(5)-1)  
   87 CONTINUE
      DO 88 K=1,ND6
      XRY06(K)=PSJ(K+LV(6)-1)  
   88 CONTINUE
      DO 89 K=1,ND7
      XRY07(K)=PSJ(K+LV(7)-1)  
   89 CONTINUE
      DO 90 K=1,ND8
      XRY08(K)=PSJ(K+LV(8)-1)  
   90 CONTINUE
      DO 91 K=1,ND9
      XRY09(K)=PSJ(K+LV(9)-1)  
   91 CONTINUE
      DO 92 K=1,ND10
      XRY10(K)=PSJ(K+LV(10)-1) 
   92 CONTINUE
      DO 93 K=1,ND11
      XRY11(K)=PSJ(K+LV(11)-1) 
   93 CONTINUE
      DO 94 K=1,ND12
      XRY12(K)=PSJ(K+LV(12)-1) 
   94 CONTINUE
C
C******************************************************************
C
c     Third light values for up to five wavelengths
      VL31=THLT(1)
      VL32=THLT(2)
      VL33=THLT(3)
      VL34=THLT(4)
      VL35=THLT(5)
      READ (IN9,202,END=299,ERR=299) BFR
      WRITE (NOUT1,44)    
   44 FORMAT(' INITIAL ESTIMATES OF PARAMETERS',/)  
      A=QS*QS/(1.D0+QS)/2.D0
      RPOT1=(POT1+A)*VMI*GVAL/RI   !potential in cgs units
      RPOT2=(POT2+A)*VMI*GVAL/RI   !potential in cgs units
   45 WRITE (NOUT1,46) AID,ECC,OMD,QS,RPOT1,RPOT2,POT1,
     $POT2,GD1,GD2,BA1,BA2,TP1,TP2,US1,US2
      IF (NWL.EQ.1) THEN
         WRITE (NOUT1,41) TZ11,TZ21,VL31,1
      END IF
      IF (NWL.EQ.2) THEN
         WRITE (NOUT1,41) TZ11,TZ21,VL31,1
         WRITE (NOUT1,41) TZ12,TZ22,VL32,2
      END IF
      IF (NWL.EQ.3) THEN
         WRITE (NOUT1,41) TZ11,TZ12,VL31,1
         WRITE (NOUT1,41) TZ12,TZ22,VL32,2
         WRITE (NOUT1,41) TZ13,TZ23,VL33,3
      END IF
      IF (NWL.EQ.4) THEN
         WRITE (NOUT1,41) TZ11,TZ21,VL31,1
         WRITE (NOUT1,41) TZ12,TZ22,VL32,2
         WRITE (NOUT1,41) TZ13,TZ23,VL33,3
         WRITE (NOUT1,41) TZ14,TZ24,VL34,4
      END IF
      IF (NWL.EQ.5) THEN
         WRITE (NOUT1,41) TZ11,TZ21,VL31,1
         WRITE (NOUT1,41) TZ12,TZ22,VL32,2
         WRITE (NOUT1,41) TZ13,TZ23,VL33,3
         WRITE (NOUT1,41) TZ14,TZ24,VL34,4
         WRITE (NOUT1,41) TZ15,TZ25,VL35,5
      END IF
   46 FORMAT (1X,'ORBITAL INCLINATION IN DEGREES',23X,'I=',F11.7,/,
     $1X,'ORBITAL ECCENTRICITY',31X,'ECC=',F11.7,/,
     $1X,'LONGITUDE OF PERIASTRON',28X,'OMD=',F11.7,/,
     $1X,'MASS RATIO,IN THE SENSE (MASS OF STAR AT INFERIOR CONJUNCTION
     $',/,' AT PRIMARY MINIMUM) DIVIDED BY',/,
     $1X,'(MASS OF STAR AT SUPERIOR CONJUNCTION AT PRIMARY MINIMUM)',/,
     $54X,'Q=',F10.7,/,1X,
     $'PHOTOSPHERIC POTENTIAL,STAR 1',/,
     $'=STAR AT SUPERIOR CONJUNCTION AT PRI.MIN.'
     $,9X,'RPOT1=',E14.7,/,
     $1X,'PHOTOSPHERIC POTENTIAL,STAR 2',/,
     $'=STAR AT INFERIOR CONJUNCTION AT PRI.MIN.',
     $9X,'RPOT2=',E14.7,/,1X,
     $'ROCHE PHOTOSPHERIC POTENTIAL,STAR 1',15X,'POT1=',F10.7,/,1X,
     $'ROCHE PHOTOSPHERIC POTENTIAL,STAR 2',15X,'POT2=',F10.7,/,1X,
     8'GRAVITY DARKENING EXPONENT,STAR 1',18X,'GD1=',F10.7,/,
     91X,'GRAVITY DARKENING EXPONENT,STAR 2',18X,'GD2=',F10.7,/,1X,
     $'BOLOMETRIC ALBEDO,STAR 1',27X,'BA1=',F 8.5,/,1X,
     $'BOLOMETRIC ALBEDO,STAR 2',27X,'BA2=',F 8.5,/,1X,
     $'POLAR TEMPERATURE,STAR 1,IN KILOKELVINS',12X,'TP1=',F10.7,/,
     $1X,'POLAR TEMPERATURE,STAR 2,IN KILOKELVINS',12X,'TP2=',F10.7,/,
     $1X,'LIMB DARKENING SCALING COEFFICIENT,STAR 1',10X,'US1=',F10.7,
     $/,1X,'LIMB DARKENING SCALING COEFFICIENT,STAR 2',10X,'US2=',
     $F10.7)
   41 FORMAT (   
     $  1X,'TIME OR PHASE OF MIDPRIMARY MINIMUM DISPLACEMENT',    
     $3X,'TZ1=',F10.7,/,
     $ 1X,'TIME OR PHASE OF MIDSECONDARY MINIMUM DISPLACEMENT',   
     $1X,'TZ2=',F10.7,/,
     $1X,'THIRD LIGHT CONTRIBUTION AT CURRENT WAVELENGTH',5X,'VL3=',
     $E14.7,/,1X,'WAVELENGTH NUMBER',I5)
      VMISN=VMI/1.989D+33
      VM2=QS*VMI
      VM2SN=QS*VMISN
      WRITE (NOUT1,42) VMI,VMISN,VM2,VM2SN,RI
   42 FORMAT (1X,'MASS OF STAR 1',38X,'M1=',
     $E14.7,' (GRAMS)',/,
     $1X,'MASS OF STAR 1 IN SOLAR MASSES',24X,'=',F10.7,/,
     $1X,'MASS OF STAR 2',38X,'M2=',E14.7,' (GRAMS)',/,
     $1X,'MASS OF STAR 2 IN SOLAR MASSES',24X,'=',F10.7,/,
     $1X,'SEPARATION OF CENTERS',31X,'RI=',E14.7,2X,' (CM.)')
      WRITE (NOUT1,47) CC,WTLEXP
   47 FORMAT(
     $     ' ALL MAG. DIFFS. MULTIPLIED BY', 
     3F4.1,' TO MAKE SURE NUMERICALLY LARGER MAG. DIFFS.',/,
     4' CORRESPOND TO FAINTER LIGHT',/,
     4' EXPONENT OF LIGHT IN 1./SQUARE ROOT OF WEIGHT',9X,'='
     5,F8.5)
      WRITE (NOUT1,48) KMN
   48 FORMAT(' KMN(TYPE OF FIT)=',I1,'(OCCULTATION=1,TRANSIT=2,BOTH=0)'
     $,/)
   32 KGPCT=0    
C  
C
  154 DO IWL=1,NWL
      VMNP(IWL)=VCLCW(LV(1),IWL)
      VMNS(IWL)=VCLCW(LV(7),IWL)
C     VMNP(IWL)=LIGHT LEVEL AT PRI.MIN., WAVELENGTH IWL
C     VMNS(IWL)=LIGHT LEVEL AT SECONDARY MIN.,WAVELENGTH IWL
      IF (KY.EQ.0) LAMDAO(IWL)=VMNP(IWL)
      IF (KY.NE.0) LAMDAO(IWL)=VMNS(IWL)
      IF (KY.EQ.0) LAMDAT(IWL)=VMNS(IWL)
      IF (KY.NE.0) LAMDAT(IWL)=VMNP(IWL)
      END DO
      IF (KY.EQ.0) PMINOC=SP(LV(1))   
      IF (KY.NE.0) PMINOC=SP(LV(7))   
      IF (KY.EQ.0) PMINTR=SP(LV(7))   
      IF (KY.NE.0) PMINTR=SP(LV(1))   
      IF (SP(LV(1)).LE.(-1.D0)) KTPI1=0
      IF ((SP(LV(1)).GT.(-1.D0)).AND.(SP(LV(1)).LE.1.D0)) KTPI1=1
      IF (SP(LV(1)).GT.1.D0) KTPI1=2
      IF (SP(LV(7)).LE.(-1.D0)) KTPI2=0
      IF ((SP(LV(7)).GT.(-1.D0)).AND.(SP(LV(7)).LE.1.D0)) KTPI2=1
      IF (SP(LV(7)).GT.1.D0) KTPI2=2
C     PRIMARY MINIMUM PHASE VALUES
      PM1=VH(11)
      PM2=VH(12)
      PM3=VH(2)  
      PM4=VH(3)  
C     SECONDARY MINIMUM PHASE VALUES
      SM1=VH(5)  
      SM2=VH(6)  
      SM3=VH(8)  
      SM4=VH(9)  
C  
C  
C     READ IN LMPT POINTS FOR EACH WAVELENGTH
C
   26 DO IWL=1,NWL
      TPM=DPHS(IWL)
      LCT=0
C  
C     LMPT IS ARBITRARY LIMIT ON NUMBER OF POINTS TO INCLUDE IN
C     SOLUTION
C     ENSURE LMPT IS INTEGER MULTIPLE OF ISTEP      
      N=NCT(IWL)
      LMPT=LMPTSV
      IF (LMPT.GT.N) LMPT=N
      I=LMPT/ISTEP
      LMPT=ISTEP*I
C      
      DO 27 I=1,LMPT
      READ (NSC3, 108,END=28) BFRG1,BFRG2,BFRG3 
	READ (IN9,18,END=299) IDX,BFRH1,BFRH2,BFRH3,BFRH4
	READ (IN16,110,END=599) PHVL,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,DLDQ,
     $DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,DLDTZS,
     $DLDL31
      IF (I.LE.LMPT) GO TO 29
   28 WRITE (NOUT1,105) I,LMPT  
  105 FORMAT (1X,'REACHED END OF FILE ON RECORD NO',I5,2X,'WITH REQUEST  
     $FOR',I5,2X,'RECORDS')    
      NIP(IWL)=KGPCT*LMPT+I-1
      GO TO 58   
   29 PH=(BFRG1-TPM)/PERIOD
      IF (PH.LT.PHRF1) PH=PH+1.D0
	IF (PH.GT.PHRF2) PH=PH-1.D0
C     Apply limits on range of points to include in solution       
      IF ((PH.GE.DLS1).AND.(PH.LT.DLN1)) THEN
C	 ZZZZ=1.D0
	 GO TO 27
	END IF
	IF ((PH.GE.DLS2).AND.(PH.LT.DLN2)) THEN
C	 ZZZZ=1.D0
	 GO TO 27
	END IF
C     INSURE MAGNITUDE DIFFERENCES RUN IN PROPER DIRECTION 
   35 DM=BFRG2*CC
C     Set weights used in solution
      IF (IWEMP.EQ.0) THEN
      WEMP=1.D0
      ELSE
      WEMP=BFRG3 
      END IF
      LCT=LCT+1  
C     ONLY EVERY ISTEP-TH DATA POINT TO BE USED WITH THIS SET OF
C     STARTING VALUES
      K=MOD(I,ISTEP)    
      IF (K.NE.0) GO TO 27     
      VL=DM      
      IF (KLMI.NE.0) GO TO 61  
      VL=DEXP((DM-RFMG(IWL))/CV)
   61 NIP(IWL)=KGPCT*LMPT+I
C     NSC2 CONTAINS THE DATA USED FOR THE SOLUTION
   62 WRITE (NSC2,108) PH,VL,WEMP
      WRITE (NSC4,18) IDX,BFRH1,BFRH2,BFRH3,BFRH4
	WRITE (NSC5,110) PHVL,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,DLDQ,DLDA1,
     $DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,DLDTZS,DLDL31     
   27 CONTINUE   
C     Read remaining NSC3 records for this wavelength
      NLT=I
      DO 75 I=NLT,N
      READ (NSC3,108,ERR=299,END=299) BFRG1,BFRG2,BFRG3
	READ (IN9,18) IDX,BFRH1,BFRH2,BFRH3,BFRH4
	READ (IN16, 110) PHVL,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,DLDQ,
     $DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,DLDTZS,
     $DLDL31
   75 CONTINUE
C     Write separator between data for different wavelengths
      WRITE (NSC2,108) ZR1,ZR1
	READ (IN9,109) BFRH1,BFRH2
   58 END DO
      ENDFILE NSC2
	ENDFILE NSC4
	ENDFILE NSC5
      REWIND NSC1
      REWIND NSC2
	REWIND NSC4
	REWIND NSC5
  101 FORMAT (5X,F14.5,2F10.6,F6.3,10X,I5)   
   67 WRITE (NOUT1,164) NOIT
  164 FORMAT (12X,'THE NUMBER OF THIS ITERATION IS',I3,/,1X,
     $'*************************************************************')
C     Save current values of parameters     
      VISV=VI
      VESV=ECC
      VOMSV=OMD
      POT1SV=POT1
      POT2SV=POT2
      QSSV=QS    
      BA1SV=BA1  
      BA2SV=BA2  
      GD1SV=GD1  
      GD2SV=GD2  
      TP1SV=TP1  
      TP2SV=TP2  
      US1SV=US1  
      US2SV=US2  
      TZ11SV=TZ11
      TZ21SV=TZ21
      TZ12SV=TZ12
      TZ22SV=TZ22
      TZ13SV=TZ13
      TZ23SV=TZ23
      TZ14SV=TZ14
      TZ24SV=TZ24
      TZ15SV=TZ15
      TZ25SV=TZ25
      VL31SV=VL31
      VL32SV=VL32
      VL33SV=VL33
      VL24SV=VL34
      VL35SV=VL35
      RF1SV=UVL(1)
      RF2SV=UVL(2)
      RF3SV=UVL(3)
      RF4SV=UVL(4)
      RF5SV=UVL(5)
      AIDSV=AID  
   18 FORMAT (I5,2F12.8,2E20.7)
      REWIND NSC4
      REWIND NSC5
C      
C     End of loop to write NSC4 and NSC5      
  109 FORMAT (2E20.7)
   19 REWIND NSC4
      REWIND NSC5
C     Do solution      
   65 CALL EDCS(C,SC,KFP,WTLEXP,IRANK,BL,BDL,KGPCT,LMPT,NSC1,NSC2,NSC4,
     $NSC5,
     $NIP,PM1,PM2,PM3,PM4,SM1,SM2,SM3,SM4,KY,KTPI1,KTPI2,NRY1,
     $NRY2,NRY3,NRY4,NRY5,NRY6,NRY7,NRY8,NRY9,NRY10,NRY11,NRY12,LAMDAO,
     $LAMDAT,PMINOC,PMINTR,NPTMX,NWL,RSMCSLW,RESQ,SUM,
     $NOUT1)
 1000 FORMAT (5D15.6)
 1001 FORMAT (' ')
 1002 FORMAT (10I5)
C     Update parameters with calculated increments
      CALL PARADU(C,SC,RI,VMI,RPT1O,RPT2O,PEVI,PEECC,PEOMD,PEPT1,
     $PEPT2,PERCH1,PERCH2,PEVQ,PEBA1,PEBA2,PEGD1,PEGD2,PETP1,PETP2,
     $PEUS1,PEUS2,PETZ11,PETZ21,PETZ12,PETZ22,PETZ13,PETZ23,PETZ14,
     $PETZ24,PETZ15,PETZ25,PEL31,PEL32,PEL33,PEL34,PEL35,PEU1,PEU2,
     $PEU3,PEU4,PEU5,FRA,NOUT1)
C
      REWIND NSC1 
C
C     Apply Kolmogorov-Smirnov goodness of fit test
      CALL HIST(NWL,NCT,RESQ,NOUT1,NHIST)     
      TZ1A(1)=TZ11
      TZ2A(1)=TZ21
      TZ1A(2)=TZ21
      TZ2A(2)=TZ22
      TZ1A(3)=TZ13
      TZ2A(3)=TZ23
      TZ1A(4)=TZ14
      TZ2A(4)=TZ24
      TZ1A(5)=TZ15
      TZ2A(5)=TZ25
      VL31A(1)=VL31
      VL31A(2)=VL32
      VL31A(3)=VL33
      VL31A(4)=VL34
      VL31A(5)=VL35
  119 FORMAT (10X,'SUMMARY OF PARAMETERS FOR NEXT ITERATION',/,
     $5X,'MASS RATIO',42X,'=',F12.7,/,
     $5X,'ORBITAL ECCENTRICITY',32X,'=',F12.7,/,
     $5X,'LONGITUDE OF PERIASTRON(DEGREES)',20X,'=',F12.7,/,
     $5X,'PHOTOSPHERE POTENTIAL,FIRST COMPONENT',15X,'=',D16.7,/,
     $5X,'PHOTOSPHERE POTENTIAL,SECOND COMPONENT',14X,'=',D16.7,/,
     $5X,'ROCHE POTENTIAL,FIRST COMPONENT',21X,'=',F12.7,/,
     $5X,'ROCHE POTENTIAL,SECOND COMPONENT',20X,'=',F12.7,/,
     $5X,'ORBITAL INCLINATION(DEGREES)',24X,'=',F12.7,/,
     $5X,'POLAR TEMPERATURE,FIRST COMPONENT(KILOKELVINS)',6X,'=',F12.7
     $,/,
     $5X,'POLAR TEMPERATURE,SECOND COMPONENT(KILOKELVINS)',5X,'=',
     $F12.7,/,
     $5X,'BOLOMETRIC ALBEDO,FIRST COMPONENT',19X,'=',F10.5,/,
     $5X,'BOLOMETRIC ALBEDO,SECOND COMPONENT',18X,'=',F10.5,/,
     $5X,'GRAVITY BRIGHTENING EXPONENT,FIRST COMPONENT',8X,'=',F12.7
     $,/,
     $5X,'GRAVITY BRIGHTENING EXPONENT,SECOND COMPONENT',7X,'=',F12.7,
     $/,  
     $5X,'LIMB DARKENING SCALING COEFFICIENT,FIRST COMPONENT', 2X,'=',
     $F12.7,/,   
     $5X,'LIMB DARKENING SCALING COEFFICIENT,SECOND COMPONENT', 1X,'=',
     $F12.7)     
  122 FORMAT (5X,'THIRD LIGHT,WAVELENGTH ORDER,=',/,
     $10X,5E15.7)
  127 FORMAT (5X,'PRIMARY MINIMUM DISPLACEMENT,WAVELENGTH ORDER,=',/,    
     $ 6X,5F15.7)
  128 FORMAT (5X,'SECONDARY MINIMUM DISPLACEMENT,WAVELENGTH ORDER,=',/,  
     $ 6X,5F15.7)
  129 FORMAT (5X,'STANDARD DEVIATIONS OF LIGHT RESIDUALS,WAVELENGTH ORD
     $ER,=',/,6X,5F15.7)
  130 FORMAT (5X,'INCREMENTS TO LIGHT REFERENCE LEVELS,IN MAGNITUDES='
     $,/,6X,5F15.5)
C     Calculate updated values of reference magnitudes 
      DO KK=1,NWL
 990  CONTINUE
      RFLGT=DEXP(RFMG(KK)/CV)+SUM(KK)
      RFMGA(KK)=-CV*DLOG(DABS(RFLGT))
      SUM(KK)=RFMGA(KK)-RFMG(KK)
      END DO
C     Write updated values of parameters to output      
      WRITE (NOUT2,112) AID,ECC,OMD,POT1,POT2,QS,BA1,BA2,
     $GD1,GD2,TP1,TP2,US1,US2
      WRITE (NOUT2,112) (VL31A(KK),KK=1,NWL)
      WRITE (NOUT2,112) (TZ1A(KK),KK=1,NWL)
      WRITE (NOUT2,112) (TZ2A(KK),KK=1,NWL)
      WRITE (NOUT2,112) (RFMGA(KK),KK=1,NWL)
      WRITE (NOUT2,112) RSMCSLW,RESQ
C      
      WRITE (NOUT1,119) QS,ECC,OMD,RPT1O,RPT2O,POT1,
     $POT2,AID,TP1,TP2,BA1,BA2,GD1,GD2,US1,US2
      WRITE (NOUT1,122) (VL31A(KK),KK=1,NWL)   
      WRITE (NOUT1,127) (TZ1A(KK),KK=1,NWL)    
      WRITE (NOUT1,128) (TZ2A(KK),KK=1,NWL)
      WRITE (NOUT1,130) (SUM(KK),KK=1,NWL)
      REWIND NOUT2
      WRITE (NOUT4,106) NWL
      WRITE (NOUT4,111) (VL31A(KK),KK=1,NWL)
      WRITE (NOUT5,106) NWL
      WRITE (NOUT5,111) (TZ1A(KK),KK=1,NWL)
      WRITE (NOUT6,106) NWL
      WRITE (NOUT6,111) (TZ2A(KK),KK=1,NWL)
      GO TO 102  
   95 WRITE (NOUT1,96)    
   96 FORMAT(1H0,'ORDER OF PARAMETERS FOR LEAST SQUARES SOLUTION INCORRE 
     2CT')
  102 CONTINUE
      CALL SYSTEM_CLOCK(CLOCK2,COUNT_RATE,COUNT_MAX)
      AAA=CLOCK1
      BBB=CLOCK2
      CCC=COUNT_RATE
      TM=(BBB-AAA)/CCC
      WRITE (NOUT1, 205) TM
      CLOSE (UNIT=   IN1,  STATUS= 'KEEP')
      CLOSE (UNIT=   IN2,  STATUS= 'KEEP')                             
      CLOSE (UNIT=   IN3,  STATUS= 'KEEP')                             
      CLOSE (UNIT=   IN4,  STATUS= 'KEEP')                             
      CLOSE (UNIT=   IN5,  STATUS= 'KEEP')                             
      CLOSE (UNIT=   IN6,  STATUS= 'KEEP')                             
      CLOSE (UNIT=   IN7,  STATUS= 'KEEP')                             
      CLOSE (UNIT=   IN8,  STATUS= 'KEEP')                             
      CLOSE (UNIT=   IN9,  STATUS= 'KEEP')                             
      CLOSE (UNIT=  IN10,  STATUS= 'KEEP')                             
      CLOSE (UNIT=  IN11,  STATUS= 'KEEP')                             
      CLOSE (UNIT=  IN12,  STATUS= 'KEEP')                              
      CLOSE (UNIT=  IN13,  STATUS= 'KEEP')                             
      CLOSE (UNIT=  IN14,  STATUS= 'KEEP')                             
      CLOSE (UNIT=  IN15,  STATUS= 'KEEP')                             
      CLOSE (UNIT=  IN16,  STATUS= 'KEEP')
      CLOSE (UNIT=  NSC1,  STATUS= 'KEEP')
      CLOSE (UNIT=  NSC2,  STATUS= 'KEEP')
      CLOSE (UNIT=  NSC3,  STATUS= 'KEEP')
      CLOSE (UNIT=  NSC4,  STATUS= 'KEEP')
      CLOSE (UNIT=  NSC5,  STATUS= 'KEEP')
      CLOSE (UNIT=  IN17,  STATUS= 'KEEP')                             
      CLOSE (UNIT= NOUT1,  STATUS= 'KEEP')                             
      CLOSE (UNIT= NOUT2,  STATUS= 'KEEP')
      CLOSE (UNIT= NOUT4,  STATUS= 'KEEP')                             
      CLOSE (UNIT= NOUT5,  STATUS= 'KEEP')                             
      CLOSE (UNIT= NOUT6,  STATUS= 'KEEP')
      CLOSE (UNIT= NHIST,  STATUS= 'KEEP')
      WRITE (KIN, 103) KEYGOOD
      CLOSE (UNIT= KIN,    STATUS= 'KEEP')
      STOP 'DIFCORR Completed successfully.'
  298 FORMAT (1X,'END OF FILE,TAPE4') 
   98 WRITE (NOUT1,298)   
      GO TO 102  
  299 CALL PMDSTOP
  399 CALL PMDSTOP
  599 CALL PMDSTOP
      END PROGRAM DIFCORR
