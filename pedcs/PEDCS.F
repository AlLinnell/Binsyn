      PROGRAM PEDCS
C     Program to calculate partial derivatives of system light with
C     respect to parameters at phases of observations
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION VH(13),LV(13),PSJ(300),FL1(11),SP(300),VCLC(300),VMX(5)
      DIMENSION HARO(201),HARP(201),BFRY(201),BFRYD(804),VRY(201),
     $HARQ(201)
      DIMENSION HARA(201), HARC(201),HARD(201),HARE(201),HARF(201),
     $HARG(201),
     $HARH(201),HARI(201),HARJ(201),HARK(201),HARL(201),HARM(201),
     $HARN(201)
      DIMENSION PHR(300),DLDT1A(300),DLDT2A(300),DLDA1A(300),
     $DLDA2A(300)
      DIMENSION DLDB1A(300),DLDB2A(300),DLDUC1A(300),DLDUC2A(300),
     $DLDPT1A(300),DLDPT2A(300),DLDQA(300),DLDIA(300),DLDTZPA(300),
     $DLDTZSA(300),DLDECCA(300),DLDOMA(300),VLPSI(300)
      DIMENSION XRY01(201),XRY02(201),XRY03(201),XRY04(201),
     $XRY05(201),
     $XRY06(201),XRY07(201),XRY08(201),XRY09(201),XRY10(201),
     $XRY11(201),
     $XRY12(201),HARR(201)
      DIMENSION ARR011(804),ARR012(804),ARR013(804),ARR014(804),
     $ARR015(804),
     $ARR016(804),ARR017(804),ARR018(804),ARR019(804),ARR0110(804),
     $ARR0111(804),ARR0115(804),ARR0116(804),ARR0117(804),
     $ARR0118(804),
     $ARR0119(804),ARR0120(804),ARR0121(804),ARR0122(804),ARR0123(804),
     $ARR0124(804),ARR0135(804),ARR0136(804),ARR0137(804),ARR0138(804),
     $ARR0112(804),ARR0113(804),ARR0114(804),ARR021(804),ARR022(804),
     $ARR023(804),ARR024(804)
      DIMENSION NWLV(5)
      COMMON/A/PI,TWOPI,HPI,CF,GVAL 
      COMMON/B/PH,DM,VL,WEMP,VH,LV
      COMMON/D/VI,POT1,POT2,QS,BA1,BA2,GD1,GD2,TP1,TP2,US1,US2,TZ1,TZ2,  
     $VL31,U,CNORM,AID,N,NSIT,NOIT,ISTEP    
      COMMON /E/ PHR,DLDT1A,DLDT2A,DLDA1A,DLDA2A,DLDB1A,DLDB2A,DLDUC1A,  
     $DLDUC2A,DLDPT1A,DLDPT2A,DLDQA,DLDIA,DLDTZPA,DLDTZSA,VCLC,DLDECCA,
     $DLDOMA
      COMMON /F/ XRY01,XRY02,XRY03,XRY04,XRY05,XRY06,XRY07,XRY08,XRY09,  
     $XRY10,XRY11,XRY12,
     $IVI,IPT1,IPT2,IVQ,IBA1,IBA2,IGD1,IGD2,ITP1,ITP2,IUS1,IUS2,ITZ1,    
     $ITZ2,IL31,IRF
      COMMON /G/ ARR011,ARR012,ARR013,ARR014,ARR015,ARR016,ARR017,
     $ARR018,ARR019,ARR021,ARR022,ARR023,ARR024,ARR0110,ARR0111,
     $ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,ARR0117,ARR0118,
     $ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,ARR0135,
     $ARR0136,ARR0137,ARR0138
      COMMON /NUNIT/ NU, NUOUT, IFOUT
      CHARACTER * 36 FL1
      CHARACTER * 24 BUF
      CHARACTER * 10 DATE,TIME,ZONE
      INTEGER * 2 IYR,IMON,IDAY,IHR,IMIN,ISEC,I100TH
      INTEGER :: CLOCK1,CLOCK2,COUNT_RATE,COUNT_MAX,TIMEVALUES
      DIMENSION TIMEVALUES(8)
      DATA IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9/1,2,3,4,55,66,7,8,9/
      DATA NOUT1,NOUT2/10,11/
      DATA TWOPI/6.2831853071796D0/
      DATA KEYBAD/-1/
      DATA KEYGOOD/0/
      DATA KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,KY7A/51,52,53,54,55,56,57/
      DATA KY8A,KY9A,KY10A,KY11A,KY12A/58,59,60,61,62/
      DATA MXNRY/50/
C
C
C**********************************************************************
C
      OPEN ( UNIT= 12,   FILE='PEDCS.ILS',STATUS='OLD')
      READ ( 12, 100)    (FL1(J),J=1,11)
      OPEN ( UNIT=IN1,   FILE=FL1(1),  STATUS='OLD')      !KEYV.DAT
      WRITE( IN1, 101)   KEYBAD
      REWIND IN1
      OPEN ( UNIT=IN2,   FILE=FL1(2),  STATUS='OLD')      !PGBX3.DAT
      OPEN ( UNIT=IN3,   FILE=FL1(3),  STATUS='OLD')      !PGBX4.DAT
      OPEN ( UNIT=IN4,   FILE=FL1(4),  STATUS='OLD')      !PGDX3.DAT
      OPEN ( UNIT=IN5,   FILE=FL1(5),  STATUS='OLD')      !GRPABC6.DAT
      OPEN ( UNIT=IN6,   FILE=FL1(6),  STATUS='OLD')      !PGG2.DAT
      OPEN ( UNIT=IN7,   FILE=FL1(7),  STATUS='OLD')      !PGCX2.DAT
      OPEN ( UNIT=IN8,   FILE=FL1(8),  STATUS='OLD')      !PGSX4.DAT
	OPEN ( UNIT=IN9,   FILE=FL1(9),  STATUS='OLD')      !GRPADC6.DAT
      OPEN ( UNIT=NOUT1, FILE=FL1(10), STATUS='REPLACE')      !PEDCS.DAT
      OPEN ( UNIT=NOUT2, FILE=FL1(11), STATUS='REPLACE')      !OUTPUT SUMMARY
C**********************************************************************
   17 FORMAT (2F15.8,3E20.7)
   33 FORMAT (7F18.13)
  100 FORMAT (A36)
  101 FORMAT (I2)
  106 FORMAT (10I5)
  108 FORMAT (2E20.7)
  205 FORMAT (1X,'PEDCS',5X,'Program running time=',F14.4,2X,'seconds')
      CALL SYSTEM_CLOCK(CLOCK1)
      CALL DATE_AND_TIME(DATE,TIME,ZONE,TIMEVALUES)
      IYR=TIMEVALUES(1)
      IMON=TIMEVALUES(2)
      IDAY=TIMEVALUES(3)
      IHR=TIMEVALUES(5)
      IMIN=TIMEVALUES(6)
      ISEC=TIMEVALUES(7)
C
      KY1=0
      KY2=0
      KY3=0
      KY4=0
      KY5=0
      KY6=0
      KY7=0
      KY8=0
      KY9=0
      KY10=0
      KY11=0
      KY12=0
      DLDI=0.0D0
      DLDECC=0.D0
      DLDOM=0.D0
      DLDPT1=0.0D0
      DLDPT2=0.0D0
      DLDQ=0.0D0
      DLDA1=0.0D0
      DLDA2=0.0D0
      DLDB1=0.0D0
      DLDB2=0.0D0
      DLDT1=0.0D0
      DLDT2=0.0D0
      DLDUC1=0.0D0
      DLDUC2=0.0D0
      DLDTZP=0.0D0
      DLDTZS=0.0D0
      DLDL31=0.0D0
      READ (IN2, 106) KCTRL,NPSI
      READ (IN3, 33) VI,PHSEC
      READ (IN3, 106) N1,N2,N3
      READ (IN7, 106) I,NT,NWL
      READ (IN5,106) NPSI,N1,N2,N3,N4,N5,N6
      READ (IN5,33) (VLPSI(K),K=1,NPSI)
      READ (IN5,106) NRY1,NRY2,NRY3,NRY4,NRY5,NRY6,NRY7,NRY8,NRY9,
     $NRY10,NRY11,NRY12
      READ (IN5,106) (LV(K),K=1,13)
C     Check that no NRYX exceeds the maximum number
      IF (NRY1.GT.MXNRY) CALL PMDSTOP
      IF (NRY2.GT.MXNRY) CALL PMDSTOP
      IF (NRY3.GT.MXNRY) CALL PMDSTOP
      IF (NRY4.GT.MXNRY) CALL PMDSTOP
      IF (NRY5.GT.MXNRY) CALL PMDSTOP
      IF (NRY6.GT.MXNRY) CALL PMDSTOP
      IF (NRY7.GT.MXNRY) CALL PMDSTOP
      IF (NRY8.GT.MXNRY) CALL PMDSTOP
      IF (NRY9.GT.MXNRY) CALL PMDSTOP
      IF (NRY10.GT.MXNRY) CALL PMDSTOP
      IF (NRY11.GT.MXNRY) CALL PMDSTOP
      IF (NRY12.GT.MXNRY) CALL PMDSTOP
C     Initially, read the SPT file heading.
C
      READ (IN8,100) BUF
C
      ICT=0
      DO 500 IWL=1,NWL
      VMX(IWL)=0.D0
      DO 40 IC=1,NPSI
C     RDWT7 INPUTS VIA IN4
C     THESE ARE THE DATA WRITTEN VIA WTOUT5 IN PGD
      CALL RDWT7(I,IL,VI,PSJ(IC),SP(IC),SMC,ERC,SMD,ERD,SME,ERE,SMF,
     $ERF,SMT,SBT,ERT,VCLC(IC),ERR,PSINT,PSEXT,surf1,surf2,KCTRL,IN4)
      IF (VCLC(IC).GT.VMX(IWL)) VMX(IWL)=VCLC(IC)
   40 CONTINUE
C************************************************
C     INPUT RESULTS FROM PGG
  711 DO 146 K=1,NPSI
      READ (IN6,123,END=98) PHR(K),DLDIA(K),DLDECCA(K),DLDOMA(K),
     $DLDPT1A(K),DLDPT2A(K),DLDQA(K),DLDT1A(K),DLDT2A(K),DLDA1A(K),
     $DLDA2A(K),DLDB1A(K),DLDB2A(K)
      AA=0.D0
  146 CONTINUE
C************************************************
  123 FORMAT (6E20.12)
C
C************************************************
C     Input results from GRPADC6.DAT
      UMAX1=-1.D0
	UMAX2=-1.D0
      DO K=1,NPSI
		READ (IN9,123) PSIP,VIP,DLDA1P,DLDA2P,DLDT1P,DLDT2P,DLDB1P,
     $	DLDB2P,DLDU1P,DLDU2P
		DLDUC1A(K)=DLDU1P
		IF (UMAX1.LT.DLDUC1A(K)) UMAX1=DLDUC1A(K)
		DLDUC2A(K)=DLDU2P
		IF (UMAX2.LT.DLDUC2A(K)) UMAX2=DLDUC2A(K)
	END DO
C     Check UMAX1&2
      IF ( (UMAX1.NE.0.D0).AND.(UMAX2.NE.0.D0) ) THEN
C       Normalize files
	DO K=1,NPSI
		DLDUC1A(K)=DLDUC1A(K)/UMAX1
	END DO
	DO K=1,NPSI
		DLDUC2A(K)=DLDUC2A(K)/UMAX2
	END DO	    
      END IF
C     Write output suitable for plotting
      IF (IWL.EQ.1) THEN
      DO K=1,NPSI
         WRITE (NOUT2,108) PSJ(K),DLDA1A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PSJ(K),DLDA2A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PSJ(K),DLDT1A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PSJ(K),DLDT2A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PSJ(K),DLDB1A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PSJ(K),DLDB2A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PHR(K),DLDIA(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PHR(K),DLDECCA(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PHR(K),DLDOMA(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PHR(K),DLDPT1A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PHR(K),DLDPT2A(K)
      END DO
      DO K=1,NPSI
         WRITE (NOUT2,108) PHR(K),DLDQA(K)
      END DO
      END IF                                               
C**********************************************
   66 CONTINUE
      VH(1)=PSJ(LV(1))
      VH(2)=PSJ(LV(2))
      VH(3)=PSJ(LV(3))
      VH(4)=PSJ(LV(4))
      VH(5)=PSJ(LV(5))
      VH(6)=PSJ(LV(6))
      VH(7)=PSJ(LV(7))
      VH(8)=PSJ(LV(8))
      VH(9)=PSJ(LV(9))
      VH(10)=PSJ(LV(10))
      VH(11)=PSJ(LV(11))
      VH(12)=PSJ(LV(12))
      VH(13)=PSJ(LV(13))
      ND1=NRY1
      ND2=NRY2
      IF (NRY3.GT.0) THEN
         ND3=NRY3
      ELSE
         ND3=1
      END IF
      IF (NRY4.GT.0) THEN
         ND4=NRY4
      ELSE
         ND4=1
      END IF
      ND5=NRY5
      IF (NRY6.GT.0) THEN
         ND6=NRY6
      ELSE
      ND6=1
      END IF
      IF (NRY7.GT.0) THEN
         ND7=NRY7
      ELSE
         ND7=1
      END IF
      ND8=NRY8
      IF (NRY9.GT.0) THEN
         ND9=NRY9
      ELSE
         ND9=1
      END IF
      IF (NRY10.GT.0) THEN
         ND10=NRY10
      ELSE
         ND10=1
      END IF
      ND11=NRY11
      IF (NRY12.GT.0) THEN
         ND12=NRY12
      ELSE
         ND12=1
      END IF
      KLM=ND2/2
      DO 392 K=1,ND2
      BFRY(K)=VCLC(K+LV(2)-1)/VMX(IWL)
  392 CONTINUE 
      CALL DFF(BFRY,BFRYD,ND2,3*ND2,2)
      DO 393 K=1,ND2
      VRY(K)=PSJ(K+LV(2)-1)    
  393 CONTINUE
      DO 394 K=1,KLM    
      CALL D1NF(VRY(K),VRY,BFRY,BFRYD,ND2,3*ND2,2,UV,
     $DLDTZPA(K+LV(2)-1))
  394 CONTINUE   
      KLM=KLM+1  
      CALL DFB(BFRY,BFRYD,ND2,3*ND2,2)
      DO 594 K=KLM,ND2
      CALL D1NB(VRY(K),VRY,BFRY,BFRYD,ND2,3*ND2,2,UV,
     $DLDTZPA(K+LV(2)-1))
  594 CONTINUE
      KLM=ND11/2
      DO 396 K=1,ND11
      BFRY(K)=VCLC(K+LV(11)-1)/VMX(IWL)
  396 CONTINUE   
      CALL DFF(BFRY,BFRYD,ND11,3*ND11,2)
      DO 397 K=1,ND11
      VRY(K)=PSJ(K+LV(11)-1)   
  397 CONTINUE
      DO 398 K=1,KLM    
      CALL D1NF(VRY(K),VRY,BFRY,BFRYD,ND11,3*ND11,2,UV,
     $DLDTZPA(K+LV(11)-1))
  398 CONTINUE   
      KLM=KLM+1  
      CALL DFB(BFRY,BFRYD,ND11,3*ND11,2)
      DO 595 K=KLM,ND11
      CALL D1NB(VRY(K),VRY,BFRY,BFRYD,ND11,3*ND11,2,UV,
     $DLDTZPA(K+LV(11)-1))
  595 CONTINUE   
      KLM=ND5/2
      DO 492 K=1,ND5
      BFRY(K)=VCLC(K+LV(5)-1)/VMX(IWL)
  492 CONTINUE   
      CALL DFF(BFRY,BFRYD,ND5,3*ND5,2)
      DO 493 K=1,ND5
      VRY(K)=PSJ(K+LV(5)-1)
  493 CONTINUE
      DO 494 K=1,KLM    
      CALL D1NF(VRY(K),VRY,BFRY,BFRYD,ND5,3*ND5,2,UV,
     $DLDTZSA(K+LV(5)-1))
  494 CONTINUE   
      KLM=KLM+1  
      CALL DFB(BFRY,BFRYD,ND5,3*ND5,2)
      DO 596 K=KLM,ND5
      CALL D1NB(VRY(K),VRY,BFRY,BFRYD,ND5,3*ND5,2,UV,
     $DLDTZSA(K+LV(5)-1))
  596 CONTINUE   
      KLM=ND8/2
      DO 495 K=1,ND8
      BFRY(K)=VCLC(K+LV(8)-1)/VMX(IWL)
  495 CONTINUE   
      CALL DFF(BFRY,BFRYD,ND8,3*ND8,2)
      DO 496 K=1,ND8
      VRY(K)=PSJ(K+LV(8)-1)    
  496 CONTINUE
      DO 497 K=1,KLM    
      CALL D1NF(VRY(K),VRY,BFRY,BFRYD,ND8,3*ND8,2,UV,
     $DLDTZSA(K+LV(8)-1))
  497 CONTINUE   
      KLM=KLM+1  
      CALL DFB(BFRY,BFRYD,ND8,3*ND8,2)
      DO 597 K=KLM,ND8
      CALL D1NB(VRY(K),VRY,BFRY,BFRYD,ND8,3*ND8,2,UV,
     $DLDTZSA(K+LV(8)-1))
  597 CONTINUE
C
C     SAVE CRITICAL PHASE RANGES
C
      DO 82 K=1,ND1
      XRY01(K)=PSJ(K+LV(1)-1)  
   82 CONTINUE   
      DO 83 K=1,ND2
      XRY02(K)=PSJ(K+LV(2)-1)  
   83 CONTINUE   
      DO 84 K=1,ND3
      XRY03(K)=PSJ(K+LV(3)-1)  
   84 CONTINUE   
      DO 86 K=1,ND4
      XRY04(K)=PSJ(K+LV(4)-1)  
   86 CONTINUE   
      DO 87 K=1,ND5
      XRY05(K)=PSJ(K+LV(5)-1)  
   87 CONTINUE   
      DO 88 K=1,ND6
      XRY06(K)=PSJ(K+LV(6)-1)  
   88 CONTINUE   
      DO 89 K=1,ND7
      XRY07(K)=PSJ(K+LV(7)-1)  
   89 CONTINUE   
      DO 90 K=1,ND8
      XRY08(K)=PSJ(K+LV(8)-1)  
   90 CONTINUE   
      DO 91 K=1,ND9
      XRY09(K)=PSJ(K+LV(9)-1)  
   91 CONTINUE   
      DO 92 K=1,ND10
      XRY10(K)=PSJ(K+LV(10)-1) 
   92 CONTINUE   
      DO 93 K=1,ND11
      XRY11(K)=PSJ(K+LV(11)-1) 
   93 CONTINUE   
      DO 94 K=1,ND12
      XRY12(K)=PSJ(K+LV(12)-1) 
   94 CONTINUE   
C
    9 DO 80 I=1,100000
       READ (IN8,108,END=500) CALCLT, PH
	PHSV=PH
      IF (PH.LT.0.D0) PH=PH+1.D0
      IF ((CALCLT.EQ.0.D0).AND.(PH.EQ.0.D0)) GO TO 499
      PHS=PH*TWOPI      
      IF (PHS.LT.0.0) PHS=PHS+TWOPI   
      IF (PHS.GT.TWOPI) PHS=PHS-TWOPI 
      DLDTZ1=0.0D0
      DLDTZ2=0.0D0
      DLDL31=1.0D0-CALCLT
C  
C     CLASSIFY OBSERVATION INTO SEPARATE COMPUTED SECTIONS OF
C     THEORETICAL LIGHT CURVE
C  
   48 IF ((PHS.GE.XRY01(1)).AND.(PHS.LT.XRY01(ND1))) GO TO 601
      IF ((PHS.GE.XRY02(1)).AND.(PHS.LT.XRY02(ND2))) GO TO 603
      IF ((PHS.GE.XRY03(1)).AND.(PHS.LT.XRY03(ND3))) GO TO 605
      IF ((PHS.GE.XRY04(1)).AND.(PHS.LT.XRY04(ND4))) GO TO 607
      IF ((PHS.GE.XRY05(1)).AND.(PHS.LT.XRY05(ND5))) GO TO 609
      IF ((PHS.GE.XRY06(1)).AND.(PHS.LT.XRY06(ND6))) GO TO 611
      IF ((PHS.GE.XRY07(1)).AND.(PHS.LT.XRY07(ND7))) GO TO 613
      IF ((PHS.GE.XRY08(1)).AND.(PHS.LT.XRY08(ND8))) GO TO 615
      IF ((PHS.GE.XRY09(1)).AND.(PHS.LT.XRY09(ND9))) GO TO 617
      IF ((PHS.GE.XRY10(1)).AND.(PHS.LT.XRY10(ND10))) GO TO 619
      IF ((PHS.GE.XRY11(1)).AND.(PHS.LT.XRY11(ND11))) GO TO 621
      IF ((PHS.GE.XRY12(1)).AND.(PHS.LT.XRY12(ND12))) GO TO 623
      IF (PHS.NE.XRY12(ND12)) CALL PMDSTOP
      GO TO 623  
C    WITHIN PRIMARY MINIMUM,EQUAL TO OR BEYOND PHASE ZERO  
  601 KL=ND1-1
      NRY=ND1
      KST=LV(1)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 631
C     PARTIAL PHASE,PRIMARY MINIMUM,EGRESS   
  603 KL=ND2-1
      NRY=ND2
      KST=LV(2)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 633  
C     BETWEEN END OF PARTIAL PHASE,PRI.MIN.,AND QUADRATURE PHASE  
  605 KL=ND3-1
      NRY=ND3
      KST=LV(3)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 635
C     BETWEEN QUADRATURE PHASE AND START OF PARTIAL PHASE,SEC.MIN.
  607 KL=ND4-1
      NRY=ND4
      KST=LV(4)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 637
C     PARTIAL PHASE,SEC.MIN.,INGRESS  
  609 KL=ND5-1
      NRY=ND5
      KST=LV(5)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 639
C     COMPLETE PHASE,SEC.MIN.,INGRESS 
  611 KL=ND6-1
      NRY=ND6
      KST=LV(6)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 641
C     COMPLETE PHASE,SEC.MIN.,EGRESS  
  613 KL=ND7-1
      NRY=ND7
      KST=LV(7)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 643
C     PARTIAL PHASE,SEC.MIN.,EGRESS   
  615 KL=ND8-1
      NRY=ND8
      KST=LV(8)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 645
C     BETWEEN END OF PARTIAL PHASE,SEC.MIN.,AND QUADRATURE 
  617 KL=ND9-1
      NRY=ND9
      KST=LV(9)-1
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 647
C     BETWEEN QUADRATURE PHASE AND PARTIAL PHASE,PRI.MIN.  
  619 KL=ND10-1
      NRY=ND10
      KST=LV(10)-1      
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 649
C     PARTIAL PHASE,PRI.MIN.,INGRESS  
  621 KL=ND11-1
      NRY=ND11
      KST=LV(11)-1      
      IF (KL.LT.3) CALL PMDSTOP
      IF (KL.GT.3) KL=3
      GO TO 651
C     COMPLETE PHASE,PRI.MIN.,INGRESS 
  623 KL=ND12-1
      NRY=ND12
      KST=LV(12)-1
      IF (PHS.LT.XRY12(ND12)) GO TO 653
      DLDI=DLDIA(LV(13))
      DLDECC=DLDECCA(LV(13))
      DLDOM=DLDOMA(LV(13))
      DLDPT1=DLDPT1A(LV(13))   
      DLDPT2=DLDPT2A(LV(13))   
      DLDQ=DLDQA(LV(13))
      DLDA1=DLDA1A(LV(13))     
      DLDA2=DLDA2A(LV(13))     
      DLDB1=DLDB1A(LV(13))     
      DLDB2=DLDB2A(LV(13))     
      DLDT1=DLDT1A(LV(13))     
      DLDT2=DLDT2A(LV(13))     
      DLDUC1=DLDUC1A(LV(13))   
      DLDUC2=DLDUC2A(LV(13))   
      DLDTZP=DLDTZPA(LV(13))   
      DLDTZS=DLDTZSA(LV(13))   
      GO TO 322
  631 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY1A
      CALL PDC(KYVA,ND1,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY01,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  633 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY2A
      CALL PDC(KYVA,ND2,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY02,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  635 CONTINUE 
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY3A
      CALL PDC(KYVA,ND3,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY03,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  637 CONTINUE  
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY4A
      CALL PDC(KYVA,ND4,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY04,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  639 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY5A
      CALL PDC(KYVA,ND5,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY05,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  641 CONTINUE   
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY6A
      CALL PDC(KYVA,ND6,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY06,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  643 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY7A
      CALL PDC(KYVA,ND7,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY07,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  645 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY8A
      CALL PDC(KYVA,ND8,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY08,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  647 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY9A
      CALL PDC(KYVA,ND9,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY09,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  649 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY10A
      CALL PDC(KYVA,ND10,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY10,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  651 CONTINUE   
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY11A
      CALL PDC(KYVA,ND11,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY11,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  653 CONTINUE
      CALL FLDFA(NRY,KST,HARA,HARC,HARD,HARE,
     $HARF,HARG,HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,HARQ,HARR)
      IF (NRY.LT.2) GO TO 655
      KYVA=KY12A
      CALL PDC(KYVA,ND12,KL,NRY,HARC,HARQ,HARR,HARD,HARE,HARF,HARG,
     $HARH,HARI,HARJ,HARK,HARL,HARM,HARN,HARO,HARP,KY1,KY2,KY3,KY4,KY5,
     $KY6,KY7,KY8,KY9,KY10,KY11,KY12,KY1A,KY2A,KY3A,KY4A,KY5A,KY6A,
     $KY7A,KY8A,KY9A,KY10A,KY11A,KY12A,XRY12,ARR011,ARR012,ARR021,
     $ARR022,ARR023,ARR024,ARR013,ARR014,ARR015,ARR016,ARR017,ARR018,
     $ARR019,ARR0110,ARR0111,ARR0112,ARR0113,ARR0114,ARR0115,ARR0116,
     $ARR0117,ARR0118,ARR0119,ARR0120,ARR0121,ARR0122,ARR0123,ARR0124,
     $ARR0135,ARR0136,ARR0137,ARR0138,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,
     $DLDQ,DLDA1,DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,
     $DLDTZS)
      GO TO 322
  655 DLDI=HARC(1)
      DLDECC=HARQ(1)
      DLDOM=HARR(1)
      DLDPT1=HARD(1)
      DLDPT2=HARE(1)
      DLDQ=HARF(1)
      DLDA1=HARG(1)
      DLDA2=HARH(1)
      DLDB1=HARI(1)
      DLDB2=HARJ(1)
      DLDT1=HARK(1)
      DLDT2=HARL(1)
      DLDUC1=HARM(1)
      DLDUC2=HARN(1)
      DLDTZP=HARO(1)
      DLDTZS=HARP(1)
  322 CONTINUE
      PH=PHSV
  790 WRITE (NOUT1, 110) PH,DLDI,DLDECC,DLDOM,DLDPT1,DLDPT2,DLDQ,DLDA1,
     $DLDA2,DLDB1,DLDB2,DLDT1,DLDT2,DLDUC1,DLDUC2,DLDTZP,DLDTZS,
     $DLDL31
      ICT=ICT+1
   80 CONTINUE
  110 FORMAT (8D15.8)
  499 NWLV(IWL)=I-1
  500 CONTINUE
      WRITE (NOUT2,501) (NWLV(J),J=1,NWL)
  501 FORMAT (1X,'Number of output records, by successive wavelengths',
     $/,1X,5I10)    
  999 CALL SYSTEM_CLOCK(CLOCK2,COUNT_RATE,COUNT_MAX)
      AAA=CLOCK1
      BBB=CLOCK2
      CCC=COUNT_RATE
      TM=(BBB-AAA)/CCC
      WRITE (NOUT2, 205) TM
C**********************************************************************
      CLOSE ( UNIT= IN2,  STATUS='KEEP')
      CLOSE ( UNIT= IN3,  STATUS='KEEP')
      CLOSE ( UNIT= IN4,  STATUS='KEEP')
      CLOSE ( UNIT= IN5,  STATUS='KEEP')
      CLOSE ( UNIT= IN6,  STATUS='KEEP')
      CLOSE ( UNIT= IN7,  STATUS='KEEP')
      CLOSE ( UNIT= IN8,  STATUS='KEEP')
      CLOSE ( UNIT=NOUT1, STATUS='KEEP')
      CLOSE ( UNIT=NOUT2, STATUS='KEEP')
      CLOSE ( UNIT=  12,  STATUS='KEEP')
      WRITE (IN1, 101) KEYGOOD
      CLOSE ( UNIT= IN1,  STATUS='KEEP')
C**********************************************************************
      STOP 'PEDCS: Completed successfully.'
   95 WRITE (NOUT2,96)
   96 FORMAT(1H0,'ORDER OF PARAMETERS FOR LEAST SQUARES SOLUTION INCORRE 
     2CT')
      GO TO 999
   98 CALL PMDSTOP
      END PROGRAM
