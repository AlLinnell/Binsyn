      SUBROUTINE BWTO(NSG,NRM,NRING,CSGR,CSGF,PXR,PYR,PZR,
     $PXF,PYF,PZF,XHZ,YHZ,PRFH,PRSH,PRRH,XRMC,YRMC,RBP,STX,STY,
     $STZ,STVS,RXHZL,RYHZL,RXHZG,RYHZG,PRVFG,PRVFL,XUL,XLL,YUL,YLL,
     $RVLD,ANG,RD,AGLD,VXP,VYP,IFC,IRC,IFCS,IRCS,IGAIN,I,IEC,IFLAG,NTH,
     $IBDY,NOUT2)
C     SRT to output data from Program ACPGB
	INCLUDE 'COMA.FOR'
	INCLUDE 'ACOMA.FOR'
      DIMENSION CSGR(MRM,MSG),CSGF(MRING,MSG),PXR(MRM,MSG),
     $PYR(MRM,MSG),
     $PZR(MRM,MSG),PXF(MRING,MSG),PYF(MRING,MSG),PZF(MRING,MSG),
     $PRRH(MRM,MSG),
     $PRFH(MRING,MSG),PRSH(MTW,MPHM,MTW),XHZ(MSG),YHZ(MSG),
     $STX(MTW,MTHM,MPHM),STY(MTW,MTHM,MPHM),STZ(MTW,MTHM,MPHM),
     $STVS(MTW,MTHM,MPHM)
      DIMENSION RXHZL(MRING),RYHZL(MRING),RXHZG(MRING),RYHZG(MRING),
     $PRVFG(MRING),PRVFL(MRING),RVLD(MSG),ANG(MSG),RD(MSG),AGLD(MSG),
     $VXP(MTW,MPHM,MTW),VYP(MTW,MPHM,MTW)
  100 FORMAT (16I5)
  101 FORMAT (5E22.13)
	NRMHZ=NRM-IFLAG+1
	IF ((NRM.EQ.0).AND.(IFLAG.EQ.0)) NRMHZ=0
      WRITE (NOUT2,100) NSG,NRM,NRING,IFC,IRC,IFCS,IRCS,IGAIN,I,IEC,
     $IFLAG,NRMHZ,IBDY
      WRITE (NOUT2,101) XUL,XLL,YUL,YLL
      IF (NSG.GT.0) WRITE (NOUT2,101) (RVLD(J),J=1,NSG)
      IF (NSG.GT.0) WRITE (NOUT2,101) (ANG(J),J=1,NSG)
      IF (NSG.GT.0) WRITE (NOUT2,101) (RD(J),J=1,NSG)
      IF (NSG.GT.0) WRITE (NOUT2,101) (AGLD(J),J=1,NSG)
      IF (NRM.GT.0) THEN
         DO K=1,NRM
         WRITE (NOUT2,101) (CSGR(K,J),J=1,NSG)
         END DO
      END IF
      IF (NRING.GT.0) THEN
         DO K=1,NRING
         WRITE (NOUT2,101) (CSGF(K,J),J=1,NSG)
         END DO
      END IF
      IF (NRM.GT.0) THEN
         DO K=1,NRM
         WRITE (NOUT2,101) (PXR(K,J),J=1,NSG)
         WRITE (NOUT2,101) (PYR(K,J),J=1,NSG)
         WRITE (NOUT2,101) (PZR(K,J),J=1,NSG)
         END DO
      END IF
      IF (NRING.GT.0) THEN
         DO K=1,NRING
         WRITE (NOUT2,101) (PXF(K,J),J=1,NSG)
         WRITE (NOUT2,101) (PYF(K,J),J=1,NSG)
         WRITE (NOUT2,101) (PZF(K,J),J=1,NSG)
         END DO
      END IF
      IF (NSG.GT.0) WRITE (NOUT2,101) (XHZ(J),J=1,NSG)
      IF (NSG.GT.0) WRITE (NOUT2,101) (YHZ(J),J=1,NSG)
      WRITE (NOUT2,101) (PRSH(I,J,1),J=1,IFCS)
      WRITE (NOUT2,101) (VXP(I,J,1),J=1,IFCS)
      WRITE (NOUT2,101) (VYP(I,J,1),J=1,IFCS)
      WRITE (NOUT2,101) (PRSH(I,J,2),J=1,IRCS)
      WRITE (NOUT2,101) (VXP(I,J,2),J=1,IRCS)
      WRITE (NOUT2,101) (VYP(I,J,2),J=1,IRCS)
      WRITE (NOUT2,101) (PRSH(3-I,J,1),J=1,IFC)
      WRITE (NOUT2,101) (VXP(3-I,J,1),J=1,IFC)
      WRITE (NOUT2,101) (VYP(3-I,J,1),J=1,IFC)
      WRITE (NOUT2,101) (PRSH(3-I,J,2),J=1,IRC)
      WRITE (NOUT2,101) (VXP(3-I,J,2),J=1,IRC)
      WRITE (NOUT2,101) (VYP(3-I,J,2),J=1,IRC)
      IF (NRING.GT.0) THEN
         DO K=1,NRING
         WRITE (NOUT2,101) (PRFH(K,J),J=1,NSG)
         END DO
      END IF
      IF (NRM.GT.0) THEN
         DO K=1,NRM
         WRITE (NOUT2,101) (PRRH(K,J),J=1,NSG)
         END DO
      END IF
      WRITE (NOUT2,101) XRMC,YRMC,RBP
	DO ITH=1,NTH
	N=NPH(I,ITH)
      WRITE (NOUT2,101) (STX(I,ITH,J),J=1,N)
	END DO
	DO ITH=1,NTH
	N=NPH(3-I,ITH)
      WRITE (NOUT2,101) (STX(3-I,ITH,J),J=1,N)
	END DO
	DO ITH=1,NTH
	N=NPH(I,ITH)
      WRITE (NOUT2,101) (STY(I,ITH,J),J=1,N)
	END DO
	DO ITH=1,NTH
	N=NPH(3-I,ITH)
      WRITE (NOUT2,101) (STY(3-I,ITH,J),J=1,N)
	END DO
	DO ITH=1,NTH
	N=NPH(I,ITH)
      WRITE (NOUT2,101) (STZ(I,ITH,J),J=1,N)
	END DO
	DO ITH=1,NTH
	N=NPH(3-I,ITH)
      WRITE (NOUT2,101) (STZ(3-I,ITH,J),J=1,N)
	END DO
	DO ITH=1,NTH
	N=NPH(I,ITH)
      WRITE (NOUT2,101) (STVS(I,ITH,J),J=1,N)
	END DO
	DO ITH=1,NTH
	N=NPH(3-I,ITH)
      WRITE (NOUT2,101) (STVS(3-I,ITH,J),J=1,N)
	END DO
      IF (NRMHZ.GT.1) WRITE (NOUT2,101) (RXHZL(J),J=1,NRMHZ)
      IF (NRMHZ.GT.1) WRITE (NOUT2,101) (RYHZL(J),J=1,NRMHZ)
      IF (NRMHZ.GT.1) WRITE (NOUT2,101) (RXHZG(J),J=1,NRMHZ)
      IF (NRMHZ.GT.1) WRITE (NOUT2,101) (RYHZG(J),J=1,NRMHZ)
      IF (NRMHZ.GT.1) WRITE (NOUT2,101) (PRVFG(J),J=1,NRMHZ)
      IF (NRMHZ.GT.1) WRITE (NOUT2,101) (PRVFL(J),J=1,NRMHZ)
      RETURN
      END
